{
    "docs": [
        {
            "location": "/", 
            "text": "Overview\n\n\nfarmOS is a web-based application for farm management, planning, and record\nkeeping.\n\n\nIt is built on \nDrupal\n, which makes it \nmodular\n, \nextensible\n, and \nsecure\n.\n\n\nOpenlayers\n is used for mapping and geodata manipulation.\n\n\nFor more information, read through some of the \nFrequently Asked Questions\n.\n\n\nGODAN Documentary Web Series\n\n\nfarmOS was featured in the \nGODAN Documentary Web Series: \"OPEN FARMS\"\n,\navailable on YouTube: \nhttps://youtu.be/bCOqg5iH6fM\n\n\n\n\n\n2016 NOFA Summer Conference\n\n\nMichael Stenta presented a farmOS workshop at the 2016 \nNOFA Summer Conference\n.\nIt covers the core features of farmOS, how to get started, where to find help,\nand how to contribute back to the project.\n\n\nThe full workshop recording is available on YouTube:\n\nhttps://youtu.be/w0ZCu8NsWKE\n\n\n\n\n\nOpen Source\n\n\nBoth Drupal and farmOS are licensed under the \nGNU General Public License\n,\nwhich means they are \nopen source\n.\n\n\nStatus\n\n\nfarmOS is under active development, but is still relatively new. The focus right\nnow is laying a strong \ngroundwork\n, so that others can more easily join in and\n\ncontribute\n.\n\n\nQuick Links\n\n\n\n\nDrupal.org: \nhttps://drupal.org/project/farm\n\n\nGithub: \nhttps://github.com/farmOS\n\n\nMonthly call: \nGoogle Hangout\n (2nd Wed of the month at 1pm Eastern)\n\n\nIRC: \n#farmOS on Freenode", 
            "title": "Home"
        }, 
        {
            "location": "/#overview", 
            "text": "farmOS is a web-based application for farm management, planning, and record\nkeeping.  It is built on  Drupal , which makes it  modular ,  extensible , and  secure .  Openlayers  is used for mapping and geodata manipulation.  For more information, read through some of the  Frequently Asked Questions .", 
            "title": "Overview"
        }, 
        {
            "location": "/#godan-documentary-web-series", 
            "text": "farmOS was featured in the  GODAN Documentary Web Series: \"OPEN FARMS\" ,\navailable on YouTube:  https://youtu.be/bCOqg5iH6fM", 
            "title": "GODAN Documentary Web Series"
        }, 
        {
            "location": "/#2016-nofa-summer-conference", 
            "text": "Michael Stenta presented a farmOS workshop at the 2016  NOFA Summer Conference .\nIt covers the core features of farmOS, how to get started, where to find help,\nand how to contribute back to the project.  The full workshop recording is available on YouTube: https://youtu.be/w0ZCu8NsWKE", 
            "title": "2016 NOFA Summer Conference"
        }, 
        {
            "location": "/#open-source", 
            "text": "Both Drupal and farmOS are licensed under the  GNU General Public License ,\nwhich means they are  open source .", 
            "title": "Open Source"
        }, 
        {
            "location": "/#status", 
            "text": "farmOS is under active development, but is still relatively new. The focus right\nnow is laying a strong  groundwork , so that others can more easily join in and contribute .", 
            "title": "Status"
        }, 
        {
            "location": "/#quick-links", 
            "text": "Drupal.org:  https://drupal.org/project/farm  Github:  https://github.com/farmOS  Monthly call:  Google Hangout  (2nd Wed of the month at 1pm Eastern)  IRC:  #farmOS on Freenode", 
            "title": "Quick Links"
        }, 
        {
            "location": "/guide/start/", 
            "text": "Getting Started\n\n\nSince farmOS is a web application, it must be hosted on a web server. This is\ndifferent than most apps, which you simply install on your local computer or\ndevice. In contrast, farmOS is installed on a server, and you use your various\ndevices to access it over a network.\n\n\nThere are two ways to get started using farmOS:\n\n\n1. DIY (host it yourself)\n\n\nfarmOS is free software, which means you are free to download the code and host\nit yourself. You can also modify and extend it to fit your needs. It is built on\n\nDrupal\n, which is a free and open-source web application framework. Drupal runs\non a web server, so it can be served to the internet 24x7. If you're familiar\nwith websites and how to host them, you can set up a farmOS site just like a\nnormal Drupal site.\n\n\nFor more information, refer to the \nfarmOS Installation Documentation\n.\n\n\n2. Third-party hosting\n\n\nThe alternative to setting up farmOS yourself is to pay a third-party to host it\nfor you.\n\n\nFarmier\n is a farmOS hosting service started by the creator of farmOS. It is a\nsubscription based service that provides hosting, automatic updates, backups,\nSSL security and other features. The proceeds of this service help the \ndevelopers to contribute more time to the project.", 
            "title": "Getting started"
        }, 
        {
            "location": "/guide/start/#getting-started", 
            "text": "Since farmOS is a web application, it must be hosted on a web server. This is\ndifferent than most apps, which you simply install on your local computer or\ndevice. In contrast, farmOS is installed on a server, and you use your various\ndevices to access it over a network.  There are two ways to get started using farmOS:", 
            "title": "Getting Started"
        }, 
        {
            "location": "/guide/start/#1-diy-host-it-yourself", 
            "text": "farmOS is free software, which means you are free to download the code and host\nit yourself. You can also modify and extend it to fit your needs. It is built on Drupal , which is a free and open-source web application framework. Drupal runs\non a web server, so it can be served to the internet 24x7. If you're familiar\nwith websites and how to host them, you can set up a farmOS site just like a\nnormal Drupal site.  For more information, refer to the  farmOS Installation Documentation .", 
            "title": "1. DIY (host it yourself)"
        }, 
        {
            "location": "/guide/start/#2-third-party-hosting", 
            "text": "The alternative to setting up farmOS yourself is to pay a third-party to host it\nfor you.  Farmier  is a farmOS hosting service started by the creator of farmOS. It is a\nsubscription based service that provides hosting, automatic updates, backups,\nSSL security and other features. The proceeds of this service help the \ndevelopers to contribute more time to the project.", 
            "title": "2. Third-party hosting"
        }, 
        {
            "location": "/guide/areas/", 
            "text": "Mapping your farm\n\n\nfarmOS gives you the ability to organize all of the various places on (and off)\nyour farm. These places are referred to as \"Areas\" in farmOS, and they can be\nreferenced when you are \nlogging events\n. They are specifically useful in\nmovement logs for \nsetting location of assets\n.\n\n\nTo create an area, go to the Farm Dashboard and click the \"Add an area\" button.\nThis will take you to a form for defining an area. Here is a quick overview of\nthe fields available to you when you are describing an area:\n\n\n\n\nName\n - The first (and only) thing an area needs is a name. All the other\n  fields are optional.\n\n\nArea type\n - farmOS uses the concept of \"area type\" to organize and\n  color-code areas on a map. Some of the types available include: Property,\n  Building, Field, and Water. The area type field is not required, but if you do\n  not use it then the area will not be displayed on the main map.\n\n\nGeometry\n - The Geometry field lets you draw your area on a map, using\n  points, lines, and polygons (see a more detailed description below).\n\n\nDescription\n - This is a simple text tield that you can use to describe\n  each area in further detail. It can be used to take notes, but it is\n  recommended that any activities be recorded using logs instead, because they\n  have a timestamp associated with them.\n\n\nPhoto(s)\n - This field lets you attach photos to your area.\n\n\nFiles\n - This field lets you attach files to your area. You can also use\n  this to upload KML files and automatically import them into the Geometry field\n  above (see more information below).\n\n\nRelations\n - The \"Parent\" and \"Weight\" fields let you define a hierarchy\n  and order to your areas. You can edit these fields individually on each area,\n  or you can use the drag-and-drop hierarchy editor - which is much easier for\n  moving a lot of areas around at once (more details below).\n\n\n\n\nUsing geometry fields\n\n\nHere are some common things you will do with the geometry fields in farmOS:\n\n\nZooming\n\n\nThere are four ways to zoom in/out:\n\n\n\n\nOn touch screens, you can \"pinch zoom\" using two fingers.\n\n\nWith a computer mouse, you can use the scroll wheel to zoom in/out.\n\n\nThe plus (+) and minus (+) buttons in the top left of the map control zoom.\n\n\nThere is a \"Geolocate\" button in the upper left (looks like a bullseye) that\n   will automatically zoom in to your current location. On a computer this will\n   use your IP address, and on a mobile device it will use your GPS.\n\n\n\n\nDrawing\n\n\nThere are four buttons for drawing shapes:\n\n\n\n\nPoint\n: Click on the map to create a point.\n\n\nLine\n: Create a series of line segments by clicking points on the map, and\n   double-clicking when you're done. You can also hold shift to draw freehand.\n\n\nCircle\n: Create a circle by clicking where you want the center to be,\n   dragging the circle outward to expand it, and clicking again to finish.\n\n\nPolygon\n: A polygon works the same as a line, except it will create a\n   closed shape at the end, whereas a line will not be filled in.\n\n\n\n\nModifying\n\n\nThere are three buttons for modifying shapes:\n\n\n\n\nEdit\n: Click the edit button, and then click a shape to select it. You can\n   click and drag any of the vertices to modify the overall shape.\n\n\nMove\n: Click the edit button, and then click a shape to select it. Then\n   click and drag the shape to move it to a different position.\n\n\nClear\n: The clear button will clear ALL shapes from the map. If you do\n   accidentally click this, refresh the page WITHOUT saving, and you will revert\n   to the previously saved shapes. Note that this will also revert any other\n   changes to your area that you haven't saved.\n\n\n\n\nImporting a KML file\n\n\nKML files are special shape files that define a geometry on a map. They can be\ncreated with various GIS/mapping software. If you already have your farm mapped\nin another software (like \nGoogle Earth\n), you can export KML files for each\narea and then import them into farmOS's geometry fields.\n\n\nTo import a KML file, follow these steps:\n\n\n\n\nCreate a new area (or edit an existing one).\n\n\nScroll down to the Files field and upload your KML file.\n\n\nScroll up to the Geometry field, and just below the map you will see a button\n   labeled \"Find using Files field\". If you uploaded a valid KML file, you will\n   see the shape(s) appear in the map.\n\n\n\n\nRemember to save!\n\n\nWhen you're done modifying your area, remember to click the Save button at the\nbottom of the page to save your changes.\n\n\nOrganizing areas hierarchically\n\n\nThere are two ways to arrange areas hierarchically in farmOS\n\n\n\n\nWhen you are editing an individual area, click \"Relations\" at the bottom and\n   use the \"Parent\" and \"Weight\" values to define the area's relationship to\n   other areas.\n\n\nOr, you can click and drag all your areas at once into a hierachal list. To\n   do this, click on the Areas link in the main menu, and in the right column\n   you will see a list of all your areas with a heading of \"Hierachy (change)\".\n   Click \"(change)\" to be brought to the hierarchy editor. Click and drag the\n   areas up and down, and left and right to arrange them how you want, and then\n   click \"Save\" at the bottom of the page.", 
            "title": "Mapping your farm"
        }, 
        {
            "location": "/guide/areas/#mapping-your-farm", 
            "text": "farmOS gives you the ability to organize all of the various places on (and off)\nyour farm. These places are referred to as \"Areas\" in farmOS, and they can be\nreferenced when you are  logging events . They are specifically useful in\nmovement logs for  setting location of assets .  To create an area, go to the Farm Dashboard and click the \"Add an area\" button.\nThis will take you to a form for defining an area. Here is a quick overview of\nthe fields available to you when you are describing an area:   Name  - The first (and only) thing an area needs is a name. All the other\n  fields are optional.  Area type  - farmOS uses the concept of \"area type\" to organize and\n  color-code areas on a map. Some of the types available include: Property,\n  Building, Field, and Water. The area type field is not required, but if you do\n  not use it then the area will not be displayed on the main map.  Geometry  - The Geometry field lets you draw your area on a map, using\n  points, lines, and polygons (see a more detailed description below).  Description  - This is a simple text tield that you can use to describe\n  each area in further detail. It can be used to take notes, but it is\n  recommended that any activities be recorded using logs instead, because they\n  have a timestamp associated with them.  Photo(s)  - This field lets you attach photos to your area.  Files  - This field lets you attach files to your area. You can also use\n  this to upload KML files and automatically import them into the Geometry field\n  above (see more information below).  Relations  - The \"Parent\" and \"Weight\" fields let you define a hierarchy\n  and order to your areas. You can edit these fields individually on each area,\n  or you can use the drag-and-drop hierarchy editor - which is much easier for\n  moving a lot of areas around at once (more details below).", 
            "title": "Mapping your farm"
        }, 
        {
            "location": "/guide/areas/#using-geometry-fields", 
            "text": "Here are some common things you will do with the geometry fields in farmOS:", 
            "title": "Using geometry fields"
        }, 
        {
            "location": "/guide/areas/#zooming", 
            "text": "There are four ways to zoom in/out:   On touch screens, you can \"pinch zoom\" using two fingers.  With a computer mouse, you can use the scroll wheel to zoom in/out.  The plus (+) and minus (+) buttons in the top left of the map control zoom.  There is a \"Geolocate\" button in the upper left (looks like a bullseye) that\n   will automatically zoom in to your current location. On a computer this will\n   use your IP address, and on a mobile device it will use your GPS.", 
            "title": "Zooming"
        }, 
        {
            "location": "/guide/areas/#drawing", 
            "text": "There are four buttons for drawing shapes:   Point : Click on the map to create a point.  Line : Create a series of line segments by clicking points on the map, and\n   double-clicking when you're done. You can also hold shift to draw freehand.  Circle : Create a circle by clicking where you want the center to be,\n   dragging the circle outward to expand it, and clicking again to finish.  Polygon : A polygon works the same as a line, except it will create a\n   closed shape at the end, whereas a line will not be filled in.", 
            "title": "Drawing"
        }, 
        {
            "location": "/guide/areas/#modifying", 
            "text": "There are three buttons for modifying shapes:   Edit : Click the edit button, and then click a shape to select it. You can\n   click and drag any of the vertices to modify the overall shape.  Move : Click the edit button, and then click a shape to select it. Then\n   click and drag the shape to move it to a different position.  Clear : The clear button will clear ALL shapes from the map. If you do\n   accidentally click this, refresh the page WITHOUT saving, and you will revert\n   to the previously saved shapes. Note that this will also revert any other\n   changes to your area that you haven't saved.", 
            "title": "Modifying"
        }, 
        {
            "location": "/guide/areas/#importing-a-kml-file", 
            "text": "KML files are special shape files that define a geometry on a map. They can be\ncreated with various GIS/mapping software. If you already have your farm mapped\nin another software (like  Google Earth ), you can export KML files for each\narea and then import them into farmOS's geometry fields.  To import a KML file, follow these steps:   Create a new area (or edit an existing one).  Scroll down to the Files field and upload your KML file.  Scroll up to the Geometry field, and just below the map you will see a button\n   labeled \"Find using Files field\". If you uploaded a valid KML file, you will\n   see the shape(s) appear in the map.", 
            "title": "Importing a KML file"
        }, 
        {
            "location": "/guide/areas/#remember-to-save", 
            "text": "When you're done modifying your area, remember to click the Save button at the\nbottom of the page to save your changes.", 
            "title": "Remember to save!"
        }, 
        {
            "location": "/guide/areas/#organizing-areas-hierarchically", 
            "text": "There are two ways to arrange areas hierarchically in farmOS   When you are editing an individual area, click \"Relations\" at the bottom and\n   use the \"Parent\" and \"Weight\" values to define the area's relationship to\n   other areas.  Or, you can click and drag all your areas at once into a hierachal list. To\n   do this, click on the Areas link in the main menu, and in the right column\n   you will see a list of all your areas with a heading of \"Hierachy (change)\".\n   Click \"(change)\" to be brought to the hierarchy editor. Click and drag the\n   areas up and down, and left and right to arrange them how you want, and then\n   click \"Save\" at the bottom of the page.", 
            "title": "Organizing areas hierarchically"
        }, 
        {
            "location": "/guide/assets/", 
            "text": "Managing assets\n\n\nAll the important and valuable things on your farm are represented as \"assets\"\nin farmOS. Assets include Plantings, Animals, Equipment, etc.\n\n\nAssets are organized into different sections in the farmOS interface, and can\nbe accessed from the main menu. You can add assets from within each asset type's\ndashboard.\n\n\nAsset fields\n\n\nEach asset type will have it's own set of fields, but some of the common ones\ninclude:\n\n\n\n\nName\n (required) - The name of the asset.\n\n\nCurrent location\n - This is actually not a real field. It is a shortcut for\n  creating movement logs to assign asset location. For more information see\n  \nMovements and location\n.\n\n\nPhotos\n - This field lets you attach photos to your asset.\n\n\nDescription\n - This is a simple text tield that you can use to describe\n  each asset in further detail. It can be used to take notes, but it is\n  recommended that any activities be recorded using logs instead, because they\n  have a timestamp associated with them.\n\n\n\n\nAsset cluster maps\n\n\nIn the dashboard of each asset, there is an \"asset cluster map\" that displays\ncounts of assets in a map, along with the geometries of their locations.\n\n\nThey are called \"cluster\" maps because they use a feature of the\n\nOpenlayers mapping library\n called a \"Cluster source\". This means that the\nlocation of all assets of a particular type (ie: animals) are loaded into a map\nat once, and they are \"clustered\" into points based on their proximity to one\nanother.\n\n\nSo if you have 20 animals all within the same relative area, you will see a\nsingle point with a \"20\" on it. You can click on that point to see a list of the\nanimals, and if you zoom in, that point will automatically break up into\nmultiple other cluster points, showing more precise locations.\n\n\nHere's a little more nitty-gritty on how this works: Movement logs are used to\nrecord the \nlocation of assets in farmOS\n, along with a geometry field for\nstoring precise geodata about location. This geometry is being loaded into\ncluster maps twice. The first is to draw the actual geometry of the asset\nlocation. And the second is to generate the cluster points. The points\nthemselves are just the \"centroid\" of the geometry itself - which basically\nmeans it's the average centerpoint, represented in latitude and longitude. So by\ndisplaying both the actual geometry, and the centroid points, you're able to get\na very nice overview of exactly where assets are on your farm. Pretty cool huh?\n\n\nArchiving assets\n\n\nAssets can be marked as \"active\" or \"inactive\". Inactive assets will not show up\nin farmOS unless you specifically want to see them. So for example, when you are\ndone harvesting a planting, you can mark it as \"inactive\" to archive it.", 
            "title": "Managing assets"
        }, 
        {
            "location": "/guide/assets/#managing-assets", 
            "text": "All the important and valuable things on your farm are represented as \"assets\"\nin farmOS. Assets include Plantings, Animals, Equipment, etc.  Assets are organized into different sections in the farmOS interface, and can\nbe accessed from the main menu. You can add assets from within each asset type's\ndashboard.", 
            "title": "Managing assets"
        }, 
        {
            "location": "/guide/assets/#asset-fields", 
            "text": "Each asset type will have it's own set of fields, but some of the common ones\ninclude:   Name  (required) - The name of the asset.  Current location  - This is actually not a real field. It is a shortcut for\n  creating movement logs to assign asset location. For more information see\n   Movements and location .  Photos  - This field lets you attach photos to your asset.  Description  - This is a simple text tield that you can use to describe\n  each asset in further detail. It can be used to take notes, but it is\n  recommended that any activities be recorded using logs instead, because they\n  have a timestamp associated with them.", 
            "title": "Asset fields"
        }, 
        {
            "location": "/guide/assets/#asset-cluster-maps", 
            "text": "In the dashboard of each asset, there is an \"asset cluster map\" that displays\ncounts of assets in a map, along with the geometries of their locations.  They are called \"cluster\" maps because they use a feature of the Openlayers mapping library  called a \"Cluster source\". This means that the\nlocation of all assets of a particular type (ie: animals) are loaded into a map\nat once, and they are \"clustered\" into points based on their proximity to one\nanother.  So if you have 20 animals all within the same relative area, you will see a\nsingle point with a \"20\" on it. You can click on that point to see a list of the\nanimals, and if you zoom in, that point will automatically break up into\nmultiple other cluster points, showing more precise locations.  Here's a little more nitty-gritty on how this works: Movement logs are used to\nrecord the  location of assets in farmOS , along with a geometry field for\nstoring precise geodata about location. This geometry is being loaded into\ncluster maps twice. The first is to draw the actual geometry of the asset\nlocation. And the second is to generate the cluster points. The points\nthemselves are just the \"centroid\" of the geometry itself - which basically\nmeans it's the average centerpoint, represented in latitude and longitude. So by\ndisplaying both the actual geometry, and the centroid points, you're able to get\na very nice overview of exactly where assets are on your farm. Pretty cool huh?", 
            "title": "Asset cluster maps"
        }, 
        {
            "location": "/guide/assets/#archiving-assets", 
            "text": "Assets can be marked as \"active\" or \"inactive\". Inactive assets will not show up\nin farmOS unless you specifically want to see them. So for example, when you are\ndone harvesting a planting, you can mark it as \"inactive\" to archive it.", 
            "title": "Archiving assets"
        }, 
        {
            "location": "/guide/logs/", 
            "text": "Logging events\n\n\nOnce you have your \nareas\n and \nassets\n in farmOS, you can start recording logs.\n\n\nLogs are records of all kinds of events. You can be as granular as you want: the\nmore information you're recording, the more you can look back on and learn from\nin the future.\n\n\nThere are a number of different type of logs in farmOS - each with it's own\npurpose and set of fields. Some of the general log types are described below,\nbut there are also other log types that pertain to specific asset types.\n\n\nActivities\n\n\nActivities are a sort of catch-all, or default, log type, which can be used for\ngeneral planning and recordkeeping of activities that don't fit any of the\nother, more specific, log types.\n\n\nMovements\n\n\nMovements are used to record the movement of a farm asset from one area to\nanother. Movement logs are the primary way that an object's location is\ndetermined.\n\n\nObservations\n\n\nObservations are used to record any kind of passive observation on the farm. For\nexample, seeing that a planting has germinated is an observation. This is a very\nflexible log type that can be used for a lot of different things. It comes with\nit's own \"Observation Type\" vocabulary for defining your own custom\ncategorizations.", 
            "title": "Logging events"
        }, 
        {
            "location": "/guide/logs/#logging-events", 
            "text": "Once you have your  areas  and  assets  in farmOS, you can start recording logs.  Logs are records of all kinds of events. You can be as granular as you want: the\nmore information you're recording, the more you can look back on and learn from\nin the future.  There are a number of different type of logs in farmOS - each with it's own\npurpose and set of fields. Some of the general log types are described below,\nbut there are also other log types that pertain to specific asset types.", 
            "title": "Logging events"
        }, 
        {
            "location": "/guide/logs/#activities", 
            "text": "Activities are a sort of catch-all, or default, log type, which can be used for\ngeneral planning and recordkeeping of activities that don't fit any of the\nother, more specific, log types.", 
            "title": "Activities"
        }, 
        {
            "location": "/guide/logs/#movements", 
            "text": "Movements are used to record the movement of a farm asset from one area to\nanother. Movement logs are the primary way that an object's location is\ndetermined.", 
            "title": "Movements"
        }, 
        {
            "location": "/guide/logs/#observations", 
            "text": "Observations are used to record any kind of passive observation on the farm. For\nexample, seeing that a planting has germinated is an observation. This is a very\nflexible log type that can be used for a lot of different things. It comes with\nit's own \"Observation Type\" vocabulary for defining your own custom\ncategorizations.", 
            "title": "Observations"
        }, 
        {
            "location": "/guide/location/", 
            "text": "Movements and location\n\n\nThe locations of all assets in farmOS are determined by \"Movement\" logs.\n\n\nWhen you create an asset, it will not be located anywhere until a movement log\nis added to it.\n\n\nfarmOS determines the \"current location\" of an asset by looking at the asset's \nmost recent movement log (with a date less than or equal to the present moment).\nEvery movement has a \"From\" and a \"To\" field on it (only the \"To\" field is\nrequired), and whatever area is referenced in the \"To\" field is considered to be\nthe asset's current location. Only movement logs that have been marked as \"done\"\nare taken into consideration.\n\n\nCreating movement logs\n\n\nThere are three ways that movement logs can be created:\n\n\n\n\nClick \"Add a Movement\" when you are viewing a single asset. This will present\n   you with a new movement log form, and automatically fill in the \"Assets\"\n   field with the asset you were looking at.\n\n\nSelect multiple assets in a list, and click the \"Move\" button at the bottom.\n   This allows you to move multiple assets at once. Similarly, this will present\n   you with a new movement log form, and automatically fill in the \"Assets\"\n   field with the assets you selected in the list.\n\n\nClick \"Add a log\" from the farmOS dashboard, and then select \"Movement\". This\n   presents you with a blank movement log form, which you can fill in however\n   you'd like.\n\n\n\n\nThere is also a shortcut: when you are editing an asset, you will see a field\nlabeled \"Location\". This field will show the asset's current location, and if\nyou change it a new movement log will automatically be created in the background\nfor you. Doing this will set the date of the movement log to the moment you\nclick \"Save\", and the movement will be marked \"done\" immediately.\n\n\nMovement log fields\n\n\nHere is a quick summary of the fields on a movement log:\n\n\n\n\nDate\n - (required) When the movement took place, or when it will take place.\n\n\nAssets\n - (required) Specify the assets that are being moved.\n\n\nFrom\n - (optional) Allows you to reference a specific area that assets are\n  moving FROM. This is optional, and in some cases it's filled in automatically\n  for you. It is primarily intended for more accurate historical records, and to\n  help identify inconsistencies or missing data.\n\n\nTo\n - (required) This is the most important field on the movement log. The\n  area that is referenced with this field will be considered the asset's\n  location.\n\n\nGeometry\n - (optional) Similar to \nFarm Areas\n, movement logs have a\n  geometry field which can be used to describe exactly where the assets are\n  being moved to. If you leave this blank, the geometry will be automatically\n  copied from the area referenced in the \"To\" field (if available).", 
            "title": "Movements and location"
        }, 
        {
            "location": "/guide/location/#movements-and-location", 
            "text": "The locations of all assets in farmOS are determined by \"Movement\" logs.  When you create an asset, it will not be located anywhere until a movement log\nis added to it.  farmOS determines the \"current location\" of an asset by looking at the asset's \nmost recent movement log (with a date less than or equal to the present moment).\nEvery movement has a \"From\" and a \"To\" field on it (only the \"To\" field is\nrequired), and whatever area is referenced in the \"To\" field is considered to be\nthe asset's current location. Only movement logs that have been marked as \"done\"\nare taken into consideration.", 
            "title": "Movements and location"
        }, 
        {
            "location": "/guide/location/#creating-movement-logs", 
            "text": "There are three ways that movement logs can be created:   Click \"Add a Movement\" when you are viewing a single asset. This will present\n   you with a new movement log form, and automatically fill in the \"Assets\"\n   field with the asset you were looking at.  Select multiple assets in a list, and click the \"Move\" button at the bottom.\n   This allows you to move multiple assets at once. Similarly, this will present\n   you with a new movement log form, and automatically fill in the \"Assets\"\n   field with the assets you selected in the list.  Click \"Add a log\" from the farmOS dashboard, and then select \"Movement\". This\n   presents you with a blank movement log form, which you can fill in however\n   you'd like.   There is also a shortcut: when you are editing an asset, you will see a field\nlabeled \"Location\". This field will show the asset's current location, and if\nyou change it a new movement log will automatically be created in the background\nfor you. Doing this will set the date of the movement log to the moment you\nclick \"Save\", and the movement will be marked \"done\" immediately.", 
            "title": "Creating movement logs"
        }, 
        {
            "location": "/guide/location/#movement-log-fields", 
            "text": "Here is a quick summary of the fields on a movement log:   Date  - (required) When the movement took place, or when it will take place.  Assets  - (required) Specify the assets that are being moved.  From  - (optional) Allows you to reference a specific area that assets are\n  moving FROM. This is optional, and in some cases it's filled in automatically\n  for you. It is primarily intended for more accurate historical records, and to\n  help identify inconsistencies or missing data.  To  - (required) This is the most important field on the movement log. The\n  area that is referenced with this field will be considered the asset's\n  location.  Geometry  - (optional) Similar to  Farm Areas , movement logs have a\n  geometry field which can be used to describe exactly where the assets are\n  being moved to. If you leave this blank, the geometry will be automatically\n  copied from the area referenced in the \"To\" field (if available).", 
            "title": "Movement log fields"
        }, 
        {
            "location": "/guide/roles/", 
            "text": "Roles\n\n\nfarmOS allows a farm to have multiple \"users\" accessing it, and each of those\nusers is assigned one or more \"roles\" to grant them different levels of\npermission.\n\n\nThree roles are provided with farmOS:\n\n\nFarm Manager\n\n\nFarm Managers have access to everything in farmOS. They can create areas, add\nassets, record logs, and change configuration.\n\n\nFarm Worker\n\n\nFarm Workers have most of the same permissions as Managers, but they cannot\nchange configuration.\n\n\nFarm Viewer\n\n\nFarm Viewers are limited to viewing farmOS areas, assets, and logs - but they\ncannot edit anything.\n\n\nThe Farm Viewer role is useful if you want to share your farm's activities with\nsomeone, but you don't want to give them the ability to make changes.\n\n\nFor example, if you are applying for Organic certification in the United States,\nyou can create a user with the Farm Viewer role for your certifying agent, so\nthey can log into your farmOS and see your records.", 
            "title": "Roles"
        }, 
        {
            "location": "/guide/roles/#roles", 
            "text": "farmOS allows a farm to have multiple \"users\" accessing it, and each of those\nusers is assigned one or more \"roles\" to grant them different levels of\npermission.  Three roles are provided with farmOS:", 
            "title": "Roles"
        }, 
        {
            "location": "/guide/roles/#farm-manager", 
            "text": "Farm Managers have access to everything in farmOS. They can create areas, add\nassets, record logs, and change configuration.", 
            "title": "Farm Manager"
        }, 
        {
            "location": "/guide/roles/#farm-worker", 
            "text": "Farm Workers have most of the same permissions as Managers, but they cannot\nchange configuration.", 
            "title": "Farm Worker"
        }, 
        {
            "location": "/guide/roles/#farm-viewer", 
            "text": "Farm Viewers are limited to viewing farmOS areas, assets, and logs - but they\ncannot edit anything.  The Farm Viewer role is useful if you want to share your farm's activities with\nsomeone, but you don't want to give them the ability to make changes.  For example, if you are applying for Organic certification in the United States,\nyou can create a user with the Farm Viewer role for your certifying agent, so\nthey can log into your farmOS and see your records.", 
            "title": "Farm Viewer"
        }, 
        {
            "location": "/hosting/installing/", 
            "text": "Installation\n\n\nfarmOS is a \nDrupal distribution\n, so it is essentially a \nDrupal\n codebase that\ncombines \nDrupal core\n with a set of pre-selected contributed modules.\n\n\nRecomended release\n\n\nThe recommended approach is to download the latest release of the pre-packaged\n\nfarmOS distribution\n from Drupal.org.\n\n\nThe Drupal.org packaged release is pre-built and ready to go. Just drop it into\na hosted web server environment and it will work the same as Drupal. For more\ninformation on installing Drupal, see the official \nDrupal Installation Guide\n.\n\n\nDuring the installation, you will be given a choice of which \"Installation\nProfile\" you want your site to use. Choose \"farmOS\" and all the proper modules\nand configuration will be set up for you.\n\n\nRequirements\n\n\nYou will need a web server with all the basic \nrequirements of Drupal\n.\n\n\nThe only additional requirement is that you use PHP 5.3+.\n Drupal 7 itself\nonly requires PHP 5.2+, but farmOS makes heavy use of the \nOpenlayers module\n,\nwhich uses some newer features of PHP.", 
            "title": "Installing"
        }, 
        {
            "location": "/hosting/installing/#installation", 
            "text": "farmOS is a  Drupal distribution , so it is essentially a  Drupal  codebase that\ncombines  Drupal core  with a set of pre-selected contributed modules.", 
            "title": "Installation"
        }, 
        {
            "location": "/hosting/installing/#recomended-release", 
            "text": "The recommended approach is to download the latest release of the pre-packaged farmOS distribution  from Drupal.org.  The Drupal.org packaged release is pre-built and ready to go. Just drop it into\na hosted web server environment and it will work the same as Drupal. For more\ninformation on installing Drupal, see the official  Drupal Installation Guide .  During the installation, you will be given a choice of which \"Installation\nProfile\" you want your site to use. Choose \"farmOS\" and all the proper modules\nand configuration will be set up for you.", 
            "title": "Recomended release"
        }, 
        {
            "location": "/hosting/installing/#requirements", 
            "text": "You will need a web server with all the basic  requirements of Drupal .  The only additional requirement is that you use PHP 5.3+.  Drupal 7 itself\nonly requires PHP 5.2+, but farmOS makes heavy use of the  Openlayers module ,\nwhich uses some newer features of PHP.", 
            "title": "Requirements"
        }, 
        {
            "location": "/hosting/updating/", 
            "text": "Updating farmOS\n\n\nNew versions of farmOS will be released on a regular basis, and it's important\nto stay up-to-date so that you can receive new features, bug fixes, and security\npatches when they become available.\n\n\nUpdating farmOS is basically the same process as \nupdating Drupal core\n.\n\n\nThe general procedure is:\n\n\n\n\nBackup your code and database! Always do this before making big changes. Be\n   ready and able to roll-back in the event that something goes wrong.\n\n\nDownload the new recommended release of farmOS from\n   \nhttps://drupal.org/project/farm\n\n\nUnzip the compressed folder, and replace everything in your Drupal codebase\n   EXCEPT the \n/sites/\n folder. Do not overwrite the \n/sites/\n folder, because\n   it contains content and configuration for your site.\n\n\n\n\nClear your cache and rebuild your registry with \nDrush\n and\n   \nDrush Registry Rebuild\n. This isn't always necessary, but it doesn't hurt.\n\n\ndrush cc all\n\n\ndrush rr\n\n\n\n\n\n\nRun database updates\n!", 
            "title": "Updating"
        }, 
        {
            "location": "/hosting/updating/#updating-farmos", 
            "text": "New versions of farmOS will be released on a regular basis, and it's important\nto stay up-to-date so that you can receive new features, bug fixes, and security\npatches when they become available.  Updating farmOS is basically the same process as  updating Drupal core .  The general procedure is:   Backup your code and database! Always do this before making big changes. Be\n   ready and able to roll-back in the event that something goes wrong.  Download the new recommended release of farmOS from\n    https://drupal.org/project/farm  Unzip the compressed folder, and replace everything in your Drupal codebase\n   EXCEPT the  /sites/  folder. Do not overwrite the  /sites/  folder, because\n   it contains content and configuration for your site.   Clear your cache and rebuild your registry with  Drush  and\n    Drush Registry Rebuild . This isn't always necessary, but it doesn't hurt.  drush cc all  drush rr    Run database updates !", 
            "title": "Updating farmOS"
        }, 
        {
            "location": "/development/drupal/", 
            "text": "Drupal\n\n\nfarmOS is built on top of \nDrupal\n, a free and open-source web application\nframework.\n\n\nBasic concepts\n\n\nIf you are new to Drupal, it is recommended that you first familiarize yourself\nwith some of the basic concepts.\n\n\n\n\nDrupal concepts\n\n\n\n\nBest practices\n\n\nIn general, farmOS development follows the same best practices and coding\nstandards set forth by the Drupal community.\n\n\n\n\nDrupal best practices\n\n\nDrupal coding standards", 
            "title": "Drupal"
        }, 
        {
            "location": "/development/drupal/#drupal", 
            "text": "farmOS is built on top of  Drupal , a free and open-source web application\nframework.", 
            "title": "Drupal"
        }, 
        {
            "location": "/development/drupal/#basic-concepts", 
            "text": "If you are new to Drupal, it is recommended that you first familiarize yourself\nwith some of the basic concepts.   Drupal concepts", 
            "title": "Basic concepts"
        }, 
        {
            "location": "/development/drupal/#best-practices", 
            "text": "In general, farmOS development follows the same best practices and coding\nstandards set forth by the Drupal community.   Drupal best practices  Drupal coding standards", 
            "title": "Best practices"
        }, 
        {
            "location": "/development/projects/", 
            "text": "Projects\n\n\nfarmOS\n is built as a set of separate but inter-dependent \nDrupal\n projects.\n\n\nDrupal is a modular system, and farmOS follows in those footsteps by providing\nall of it's features as singularly-focused modules on top of Drupal core.\n\n\nAll of these various modules, their dependencies, third-party libraries, and\nthe official farmOS Drupal theme are packaged together into a\n\nfarm-focused Drupal distribution\n that is collectively referred to as \"farmOS\".\n\n\nDistributions of Drupal are roughly analogous to distributions of Linux. They\nserve to collect various code and configuration together in an intentional way.\nMore information can be found in the \nDrupal distribution documentation\n.\n\n\nTo learn more about Drupal in general, refer to the \nDrupal documentation\n.\n\n\nDistribution\n\n\n\n\nfarmOS Distribution\n\n\n\n\nIf you are getting started with farmOS, downloading and installing the farmOS\ndistribution is the recommended approach. Drupal.org has an automated packaging\nsystem, so you can be sure it's all built properly and everything is included.\n\n\nThe purpose of the farmOS distribution is to collect all the modules in one\npackage, along with some default configuration, theming, etc - so you can get up\nand running using farmOS the way it was intendend and designed to be used.\n\n\nYou are not required to use the distribution. Each of the farmOS components is\nprovided as a separate module, so you can install them individually on a\nnon-farmOS Drupal website. This isn't recommended unless you're very comfortable\nwith Drupal.\n\n\nModules\n\n\nIncluded in farmOS\n\n\nThese modules are packaged with the farmOS distribution:\n\n\n\n\nFarm Access\n\n\nFarm Admin\n\n\nFarm Area\n\n\nFarm Asset\n\n\nFarm Crop\n\n\nFarm Equipment\n\n\nFarm Fields\n\n\nFarm Livestock\n\n\nFarm Log\n\n\nFarm Map\n\n\nFarm MapKnitter\n\n\nFarm Quantity\n\n\nFarm Sensor\n\n\nFarm Soil\n\n\nFarm Taxonomy\n\n\nFarm Tour\n\n\n\n\nOther modules\n\n\nThese modules aren't packaged with the farmOS distribution, but they can be\nadded to extend your farmOS functionality:\n\n\n\n\nFarm Bee\n\n\nFarm Maple\n\n\nFarm Mushroom\n\n\n\n\nTheme\n\n\nThe official farmOS theme is a Drupal theme based off of \nBootstrap\n.\n\n\n\n\nFarm Theme", 
            "title": "Projects"
        }, 
        {
            "location": "/development/projects/#projects", 
            "text": "farmOS  is built as a set of separate but inter-dependent  Drupal  projects.  Drupal is a modular system, and farmOS follows in those footsteps by providing\nall of it's features as singularly-focused modules on top of Drupal core.  All of these various modules, their dependencies, third-party libraries, and\nthe official farmOS Drupal theme are packaged together into a farm-focused Drupal distribution  that is collectively referred to as \"farmOS\".  Distributions of Drupal are roughly analogous to distributions of Linux. They\nserve to collect various code and configuration together in an intentional way.\nMore information can be found in the  Drupal distribution documentation .  To learn more about Drupal in general, refer to the  Drupal documentation .", 
            "title": "Projects"
        }, 
        {
            "location": "/development/projects/#distribution", 
            "text": "farmOS Distribution   If you are getting started with farmOS, downloading and installing the farmOS\ndistribution is the recommended approach. Drupal.org has an automated packaging\nsystem, so you can be sure it's all built properly and everything is included.  The purpose of the farmOS distribution is to collect all the modules in one\npackage, along with some default configuration, theming, etc - so you can get up\nand running using farmOS the way it was intendend and designed to be used.  You are not required to use the distribution. Each of the farmOS components is\nprovided as a separate module, so you can install them individually on a\nnon-farmOS Drupal website. This isn't recommended unless you're very comfortable\nwith Drupal.", 
            "title": "Distribution"
        }, 
        {
            "location": "/development/projects/#modules", 
            "text": "", 
            "title": "Modules"
        }, 
        {
            "location": "/development/projects/#included-in-farmos", 
            "text": "These modules are packaged with the farmOS distribution:   Farm Access  Farm Admin  Farm Area  Farm Asset  Farm Crop  Farm Equipment  Farm Fields  Farm Livestock  Farm Log  Farm Map  Farm MapKnitter  Farm Quantity  Farm Sensor  Farm Soil  Farm Taxonomy  Farm Tour", 
            "title": "Included in farmOS"
        }, 
        {
            "location": "/development/projects/#other-modules", 
            "text": "These modules aren't packaged with the farmOS distribution, but they can be\nadded to extend your farmOS functionality:   Farm Bee  Farm Maple  Farm Mushroom", 
            "title": "Other modules"
        }, 
        {
            "location": "/development/projects/#theme", 
            "text": "The official farmOS theme is a Drupal theme based off of  Bootstrap .   Farm Theme", 
            "title": "Theme"
        }, 
        {
            "location": "/development/issue-queues/", 
            "text": "Issue Queues\n\n\nDrupal.org\n\n\nAll farmOS development tasks, feature requests, bug reports, and general\nplanning/discussion takes place in the Drupal.org issue queues.\n\n\nfarmOS is comprised of many \nprojects\n, and each has its own issue queue. If you\naren't sure where a particular issue should be posted, just add it to the\n\nfarmOS Distribution issue queue\n, and someone will move it to the appropriate\nplace.\n\n\nGithub\n\n\nIf you're a Github user, you can also feel free to post issues in the\n\nGithub queues\n. They will either be addressed there, or copied to Drupal.org\nand integrated into the roadmap.", 
            "title": "Issue Queues"
        }, 
        {
            "location": "/development/issue-queues/#issue-queues", 
            "text": "", 
            "title": "Issue Queues"
        }, 
        {
            "location": "/development/issue-queues/#drupalorg", 
            "text": "All farmOS development tasks, feature requests, bug reports, and general\nplanning/discussion takes place in the Drupal.org issue queues.  farmOS is comprised of many  projects , and each has its own issue queue. If you\naren't sure where a particular issue should be posted, just add it to the farmOS Distribution issue queue , and someone will move it to the appropriate\nplace.", 
            "title": "Drupal.org"
        }, 
        {
            "location": "/development/issue-queues/#github", 
            "text": "If you're a Github user, you can also feel free to post issues in the Github queues . They will either be addressed there, or copied to Drupal.org\nand integrated into the roadmap.", 
            "title": "Github"
        }, 
        {
            "location": "/development/architecture/", 
            "text": "Entity types\n\n\nfarmOS is architected using four Drupal entity types:\n\n\n\n\nFarm Assets\n\n\nLogs\n\n\nTaxonomy Terms\n\n\nUsers\n\n\n\n\nThe Entity system in Drupal provides a standardized way of representing\ndifferent types of objects, and includes mechanisms and APIs for adding fields,\ncreating relationships to other entities, and performing actions when entities\nare created/displayed/updated/deleted. farmOS uses Drupal's entity system to\nrepresent all of its records.\n\n\nThe first three types (Farm Assets, Logs, and Taxonomy Terms) also use a Drupal\nconcept known as \"bundles\". Bundles are essentially sub-types. Each bundle can\nhave a unique set of input fields on it, which can be used to create different\ntypes of assets, logs, etc.\n\n\nTo learn more about how entity types and bundles work in Drupal, refer to\n\nAn Introduction to Entities\n in the drupal.org handbook.\n\n\nThe following is a brief overview of the entity types that farmOS uses.\n\n\nFarm Assets\n\n\nThe \"Farm Asset\" entity type is provided by the \nFarm Asset module\n, and is used\nto represent \"assets\" or \"things\" in the farm. farmOS comes with a core set of\nasset types, including Plantings, Animals, and Equipment - and more can be added\nvia contributed modules.\n\n\nLogs\n\n\nThe \"Log\" entity type is provided by the \nLog module\n, and is used to represent\nvarious types of events that are recorded on a farm (ie: activities, movements,\nobservations, harvests, etc).\n\n\nThe \nFarm Log module\n provides a \ncore set of log types\n that can apply to any\nkind of asset. Other modules can provide more specific log types - like the\n\"Seeding\" log type, which is provided by the \nFarm Crop module\n.\n\n\nTaxonomy Terms\n\n\nTaxonomy Terms are a core Drupal entity type, and they are generally used for\ncategorization and tagging of things. Taxonomy Terms are organized into\n\"Vocabularies\", and farmOS provides a number of different vocabulary types that\nare used throughout the system.\n\n\nUsers\n\n\nUsers are a core Drupal entity type, and they provide the mechanism through\nwhich you can log into the system and use it. They represent all the different\npeople who are involved with the farm, and they can be assigned roles to grant\nthem different \nlevels of permission\n.", 
            "title": "Architecture"
        }, 
        {
            "location": "/development/architecture/#entity-types", 
            "text": "farmOS is architected using four Drupal entity types:   Farm Assets  Logs  Taxonomy Terms  Users   The Entity system in Drupal provides a standardized way of representing\ndifferent types of objects, and includes mechanisms and APIs for adding fields,\ncreating relationships to other entities, and performing actions when entities\nare created/displayed/updated/deleted. farmOS uses Drupal's entity system to\nrepresent all of its records.  The first three types (Farm Assets, Logs, and Taxonomy Terms) also use a Drupal\nconcept known as \"bundles\". Bundles are essentially sub-types. Each bundle can\nhave a unique set of input fields on it, which can be used to create different\ntypes of assets, logs, etc.  To learn more about how entity types and bundles work in Drupal, refer to An Introduction to Entities  in the drupal.org handbook.  The following is a brief overview of the entity types that farmOS uses.", 
            "title": "Entity types"
        }, 
        {
            "location": "/development/architecture/#farm-assets", 
            "text": "The \"Farm Asset\" entity type is provided by the  Farm Asset module , and is used\nto represent \"assets\" or \"things\" in the farm. farmOS comes with a core set of\nasset types, including Plantings, Animals, and Equipment - and more can be added\nvia contributed modules.", 
            "title": "Farm Assets"
        }, 
        {
            "location": "/development/architecture/#logs", 
            "text": "The \"Log\" entity type is provided by the  Log module , and is used to represent\nvarious types of events that are recorded on a farm (ie: activities, movements,\nobservations, harvests, etc).  The  Farm Log module  provides a  core set of log types  that can apply to any\nkind of asset. Other modules can provide more specific log types - like the\n\"Seeding\" log type, which is provided by the  Farm Crop module .", 
            "title": "Logs"
        }, 
        {
            "location": "/development/architecture/#taxonomy-terms", 
            "text": "Taxonomy Terms are a core Drupal entity type, and they are generally used for\ncategorization and tagging of things. Taxonomy Terms are organized into\n\"Vocabularies\", and farmOS provides a number of different vocabulary types that\nare used throughout the system.", 
            "title": "Taxonomy Terms"
        }, 
        {
            "location": "/development/architecture/#users", 
            "text": "Users are a core Drupal entity type, and they provide the mechanism through\nwhich you can log into the system and use it. They represent all the different\npeople who are involved with the farm, and they can be assigned roles to grant\nthem different  levels of permission .", 
            "title": "Users"
        }, 
        {
            "location": "/development/update-safety/", 
            "text": "Developing with updates in mind\n\n\nfarmOS is \nbuilt on Drupal\n, which means that it is extremely flexible. If you\nare installing your own instance of farmOS, you have full control over the\nentities, fields, Views, etc. So you can change things that farmOS sets up by\ndefault. This is great! And it's part of the reason why farmOS can grow and\nevolve so quickly. But, with great power comes great responsibility.\n\n\nThe danger of this comes when it's time to \nupdate your farmOS\n instance to a\nnew version. If you've made modifications to core fields or entity types, they\nmay no longer be compatible with the \"main line\" of farmOS development.\n\n\nThink about it like this: when you make a change to the configuration of your\nsystem, you are essentially creating a new \"branch\" of farmOS. It's no longer\ndefault farmOS, in other words. It's your own unique configuration.\n\n\nWhen a new official version of farmOS is released, your modifications may\nconflict with those in the new release. Depending on what these changes are, it\ncan be pretty easy to merge them together... or it can be a nightmare.\n\n\nSo, as a general recommendation: if you are modifying the inner workings of\nfarmOS, you should either be very familiar with what you're doing and how it\nwill affect updates, or you shouldn't do it with your live data. Set up a\nsecond testing site, make some modifications, and then open up a new issue in\nthe \nfarmOS issue queues\n and suggest your changes for inclusion in the project!", 
            "title": "Update Safety"
        }, 
        {
            "location": "/development/update-safety/#developing-with-updates-in-mind", 
            "text": "farmOS is  built on Drupal , which means that it is extremely flexible. If you\nare installing your own instance of farmOS, you have full control over the\nentities, fields, Views, etc. So you can change things that farmOS sets up by\ndefault. This is great! And it's part of the reason why farmOS can grow and\nevolve so quickly. But, with great power comes great responsibility.  The danger of this comes when it's time to  update your farmOS  instance to a\nnew version. If you've made modifications to core fields or entity types, they\nmay no longer be compatible with the \"main line\" of farmOS development.  Think about it like this: when you make a change to the configuration of your\nsystem, you are essentially creating a new \"branch\" of farmOS. It's no longer\ndefault farmOS, in other words. It's your own unique configuration.  When a new official version of farmOS is released, your modifications may\nconflict with those in the new release. Depending on what these changes are, it\ncan be pretty easy to merge them together... or it can be a nightmare.  So, as a general recommendation: if you are modifying the inner workings of\nfarmOS, you should either be very familiar with what you're doing and how it\nwill affect updates, or you shouldn't do it with your live data. Set up a\nsecond testing site, make some modifications, and then open up a new issue in\nthe  farmOS issue queues  and suggest your changes for inclusion in the project!", 
            "title": "Developing with updates in mind"
        }, 
        {
            "location": "/development/docker/", 
            "text": "farmOS on Docker\n\n\n\n\nDocker\n is an open-source project that automates the deployment of applications\ninside software containers. - \nWikipedia\n\n\n\n\nA farmOS Docker image is available on \nDocker Hub\n at\n\nhttps://hub.docker.com/r/farmos/farmos\n.\nIt is built automatically from the Dockerfile included with the\n\nfarmOS distribution\n, whenever new commits are pushed to the\n\nfarmOS GitHub repository\n.\n\n\nThis can be used for local farmOS development purposes, or for hosting your own\nfarmOS instance on a web server with the help of Docker.\n\n\nThis document primarily covers how to set up a local development environment\nwith Docker. It does not cover how to host a production farmOS instance. The\nimage should support this, but it is largely untested.\n\n\nGeneral info\n\n\nEnvironment variables\n\n\nThe farmOS Dockerfile exposes a few environment variables, which can be\noverridden when the container is run.\n\n\n\n\nFARMOS_VERSION\n - This is the tagged/packaged release of farmOS that should be\ndownloaded from drupal.org. This will be used if \nFARMOS_DEV\n is \nfalse\n (see\nbelow). This will always be the most recently packaged release of farmOS.\n\n\nFARMOS_DEV_BRANCH\n - This is the branch that should be used for development\npurposes. This will be used if \nFARMOS_DEV\n is \ntrue\n (see below). The default\nis the branch you currently have checked out.\n\n\nFARMOS_DEV\n - This is a boolean variable to specify whether you want\nto set up a development environment in the Docker container (when it is set to\n\ntrue\n), or you want to use the official packaged release defined in\n\nFARMOS_VERSION\n above (when it is set to \nfalse\n). The default is \nfalse\n. See\nmore detailed information about how this works below.\n\n\n\n\nDevelopment vs production\n\n\nThe Dockerfile can theoretically be used for either development or production\nenvironments. The farmOS codebase will be set up differently, depending on the\nstatus of the \nFARMOS_DEV\n environment variable.\n\n\nWhen \nFARMOS_DEV\n is set to \ntrue\n, farmOS is built using \ndrush make\n with the\n\n--working-copy\n flag. This ensures that working Git directories are checked out\nfor each of the \nfarmOS projects\n. It will use whatever branch is specified in\nthe \nFARMOS_DEV_BRANCH\n variable. The \nFARMOS_VERSION\n variable is ignored.\n\n\nWhen \nFARMOS_DEV\n is set to \nfalse\n (this is the default), then the officially\npackaged release of farmOS will be downloaded from drupal.org and unpacked in\nthe container. It will download the version specified in the \nFARMOS_VERSION\n\nvariable. The \nFARMOS_DEV_BRANCH\n variable is ignored.\n\n\nRebuilding the codebase\n\n\nThe farmOS Docker image assumes that the entire farmOS codebase (located in\n\n/var/www/html\n within the container) will be mounted on the host as a\n\nDocker volume\n. A Docker \nENTRYPOINT\n script is included to ensure that the\nfarmOS codebase is created within that volume. When the container is destroyed,\neverything in \n/var/www/html\n persists in the host volume.\n\n\nSince the farmOS codebase is built in the \nENTRYPOINT\n script, and not in the\nDockerfile, that means that updating your Docker image will not necessarily\nupdate your farmOS codebase.\n\n\nTherefore, the \nENTRTYPOINT\n script has logic to decide if/when the farmOS\ncodebase should be rebuilt. Simply put, if you are running a packaged release of\nfarmOS, and a new version of farmOS is released, all you have to do is pull an\nupdated farmOS Docker image and rebuild your container to get the new version.\n\n\nIf, on the other hand, you have a development build (\nFARMOS_DEV\n is \ntrue\n),\nthen the only way to trigger a rebuild is to delete \nprofiles/farm/farm.info\n.\nThen, stop and start your container and the farmOS development codebase will be\nrebuilt with \ndrush make\n.\n\n\nMore specifically, farmOS will be rebuilt if one of the following is true:\n\n\n\n\nprofiles/farm/farm.info\n is missing, or:\n\n\nFARMOS_DEV\n is \nfalse\n and the version string in \nprofiles/farm/farm.info\n\ndoes not match \nFARMOS_VERSION\n in the Dockerfile.\n\n\n\n\nWhen the codebase is rebuilt, everything in \n/var/www/html\n is wiped out and\nreplaced automatically, with the exception of the \n/var/www/html/sites\n\ndirectory - which is preserved across the rebuild. This ensures that Drupal's\n\nsettings.php\n, any uploaded files (in \nsites/default/files\n), and any\nadditional modules that you add to \nsites/*/modules\n are not lost when the\ncodebase is rebuilt.\n\n\nWARNING:\n If you have a development environment (created with \nFARMOS_DEV\n\nset to \ntrue\n) and you have made changes to any of the working Git repositories\nin \n/var/www/html/profiles/farm\n, they will be overwritten when the codebase is\nrebuilt. The best way to avoid this is to copy any overridden modules/themes to\nthe \nsites/all/modules\n or \nsites/all/themes\n directory so that they are\npreserved when the codebase is rebuilt.\n\n\nALSO NOTE:\n When the codebase is rebuilt, it does NOT automatically run\nupdate.php on the site. You must do this manually. See the \nUpdating farmOS\n\npage (specifically the steps for clearing cache and running database updates)\nfor more details.\n\n\nLocal development with Docker Compose\n\n\nThe recommended approach for local farmOS development in Docker is to use\n\nDocker Compose\n to build both the farmOS container and the MySQL database\ncontainer.\n\n\nThe \ndocker-compose.yml\n file included with farmOS sets \nFARMOS_DEV\n to \ntrue\n\nby default, so it is intended only for development purposes at this time.\n\n\nInstall Docker and Docker Compose\n\n\nFirst, install Docker and Docker Compose:\n\n\n\n\nInstall Docker\n\n\nOn Mac OS X, use \"dlite\" (not \"Docker for Mac\" or \"Docker Toolbox\")\n\n\nOn Windows, use \"Docker for Windows\" (not \"Docker Toolbox\")\n\n\nOn Linux, follow the directions on docker.com\n\n\n\n\n\n\nInstall Docker Compose\n\n\n\n\nMac Specific Instructions\n\n\nDue to \nperformance issues\n with shared volumes in Docker for Mac, \ndlite\n is\ncurrently the suggested way to host Docker images. The following sections\ndescribe how to install dlite and start/stop containers:\n\n\nInstalling\n\n\n\n\nDownload the latest release from \ndlite releases\n on GitHub\n\n\nExtract dlite from the tarball and copy it to \n/usr/local/bin/dlite\n\n\nRun: \nchmod +x /usr/local/bin/dlite\n\n\nInitialize dlite by running: \ndlite init\n\n\nStart dlite host by running: \ndlite start\n\n\n\n\nStarting\n\n\n\n\nProceed with \nCreate Containers\n\n\nFix networking by running \ndocker network connect bridge farmos_www_1\n\n\nProceed with \nInstall farmOS\n at \nhttp://farmos_www_1.docker\n\n\n\n\nStopping\n\n\n\n\nRun: \ndocker-compose stop\n\n\nRemove networking: \ndocker network disconnect bridge farmos_www_1\n\n\n\n\nCreate containers\n\n\nTo create the farmOS Docker containers, first clone the farmOS repository:\n\n\ngit clone https://github.com/farmOS/farmOS.git \n cd farmOS\n\n\n\nThen, use \ndocker-compose up\n to create the containers:\n\n\nsudo docker-compose up\n\n\n\nThis will create two containers: a farmOS application container, and a MySQL\ndatabase container.\n\n\nNote:\n It will take some time for the containers to start the first time.\nThis is because the farmOS codebase needs to be built when the container is run\n(it is not built in the image itself). For this reason, you might not want to\nuse the \n-d\n flag at the end of \nsudo docker-compose up\n, so that you can see\nthe progress. Once it is built, stopping and starting the container is very\nquick.\n\n\nPersistent volumes\n\n\nThe docker-compose.yml file defines two Docker volumes that will be available on\nyour host system:\n\n\n\n\n/var/html/www\n from the farmOS application container\n\n\n/var/lib/mysql\n from the MySQL database container\n\n\n\n\nBoth will be made available within a \n.data\n directory in the farmOS repository\non the host. This is where you will be able to access the code for development\npurposes. It is also how your database and files are persisted when the\ncontainers are destroyed and rebuilt.\n\n\nInstall farmOS\n\n\nOnce the containers are up and running, you can install farmOS using the Drupal\ninstaller. This is a simple step-by-step process that you will need to go\nthrough when you first access the site in your browser.\n\n\nTo find the IP address of your farmOS container, use the following command:\n\n\nsudo docker inspect --format '{{ .NetworkSettings.Networks.farmos_default.IPAddress }}' farmos_www_1\n\n\n\nVisit the IP address in a browser - you should see the Drupal/farmOS installer.\n\n\nIn the \"Set up database\" step of installation, use the following values:\n\n\n\n\nDatabase name: \nfarmos\n\n\nDatabase username: \nfarmos\n\n\nDatabase password: \nfarmos\n\n\nUnder \"Advanced options\", change \"Database host\" to: \ndb\n\n\n\n\nFollow the instructions to continue with the installation and you should be left\nwith a fully-functioning farmOS instance running in a Docker container!\n\n\nStop/start containers\n\n\nTo stop your running containers:\n\n\nsudo docker-compose stop\n\n\n\nTo start your containers:\n\n\nsudo docker-compose start", 
            "title": "Docker"
        }, 
        {
            "location": "/development/docker/#farmos-on-docker", 
            "text": "Docker  is an open-source project that automates the deployment of applications\ninside software containers. -  Wikipedia   A farmOS Docker image is available on  Docker Hub  at https://hub.docker.com/r/farmos/farmos .\nIt is built automatically from the Dockerfile included with the farmOS distribution , whenever new commits are pushed to the farmOS GitHub repository .  This can be used for local farmOS development purposes, or for hosting your own\nfarmOS instance on a web server with the help of Docker.  This document primarily covers how to set up a local development environment\nwith Docker. It does not cover how to host a production farmOS instance. The\nimage should support this, but it is largely untested.", 
            "title": "farmOS on Docker"
        }, 
        {
            "location": "/development/docker/#general-info", 
            "text": "", 
            "title": "General info"
        }, 
        {
            "location": "/development/docker/#environment-variables", 
            "text": "The farmOS Dockerfile exposes a few environment variables, which can be\noverridden when the container is run.   FARMOS_VERSION  - This is the tagged/packaged release of farmOS that should be\ndownloaded from drupal.org. This will be used if  FARMOS_DEV  is  false  (see\nbelow). This will always be the most recently packaged release of farmOS.  FARMOS_DEV_BRANCH  - This is the branch that should be used for development\npurposes. This will be used if  FARMOS_DEV  is  true  (see below). The default\nis the branch you currently have checked out.  FARMOS_DEV  - This is a boolean variable to specify whether you want\nto set up a development environment in the Docker container (when it is set to true ), or you want to use the official packaged release defined in FARMOS_VERSION  above (when it is set to  false ). The default is  false . See\nmore detailed information about how this works below.", 
            "title": "Environment variables"
        }, 
        {
            "location": "/development/docker/#development-vs-production", 
            "text": "The Dockerfile can theoretically be used for either development or production\nenvironments. The farmOS codebase will be set up differently, depending on the\nstatus of the  FARMOS_DEV  environment variable.  When  FARMOS_DEV  is set to  true , farmOS is built using  drush make  with the --working-copy  flag. This ensures that working Git directories are checked out\nfor each of the  farmOS projects . It will use whatever branch is specified in\nthe  FARMOS_DEV_BRANCH  variable. The  FARMOS_VERSION  variable is ignored.  When  FARMOS_DEV  is set to  false  (this is the default), then the officially\npackaged release of farmOS will be downloaded from drupal.org and unpacked in\nthe container. It will download the version specified in the  FARMOS_VERSION \nvariable. The  FARMOS_DEV_BRANCH  variable is ignored.", 
            "title": "Development vs production"
        }, 
        {
            "location": "/development/docker/#rebuilding-the-codebase", 
            "text": "The farmOS Docker image assumes that the entire farmOS codebase (located in /var/www/html  within the container) will be mounted on the host as a Docker volume . A Docker  ENTRYPOINT  script is included to ensure that the\nfarmOS codebase is created within that volume. When the container is destroyed,\neverything in  /var/www/html  persists in the host volume.  Since the farmOS codebase is built in the  ENTRYPOINT  script, and not in the\nDockerfile, that means that updating your Docker image will not necessarily\nupdate your farmOS codebase.  Therefore, the  ENTRTYPOINT  script has logic to decide if/when the farmOS\ncodebase should be rebuilt. Simply put, if you are running a packaged release of\nfarmOS, and a new version of farmOS is released, all you have to do is pull an\nupdated farmOS Docker image and rebuild your container to get the new version.  If, on the other hand, you have a development build ( FARMOS_DEV  is  true ),\nthen the only way to trigger a rebuild is to delete  profiles/farm/farm.info .\nThen, stop and start your container and the farmOS development codebase will be\nrebuilt with  drush make .  More specifically, farmOS will be rebuilt if one of the following is true:   profiles/farm/farm.info  is missing, or:  FARMOS_DEV  is  false  and the version string in  profiles/farm/farm.info \ndoes not match  FARMOS_VERSION  in the Dockerfile.   When the codebase is rebuilt, everything in  /var/www/html  is wiped out and\nreplaced automatically, with the exception of the  /var/www/html/sites \ndirectory - which is preserved across the rebuild. This ensures that Drupal's settings.php , any uploaded files (in  sites/default/files ), and any\nadditional modules that you add to  sites/*/modules  are not lost when the\ncodebase is rebuilt.  WARNING:  If you have a development environment (created with  FARMOS_DEV \nset to  true ) and you have made changes to any of the working Git repositories\nin  /var/www/html/profiles/farm , they will be overwritten when the codebase is\nrebuilt. The best way to avoid this is to copy any overridden modules/themes to\nthe  sites/all/modules  or  sites/all/themes  directory so that they are\npreserved when the codebase is rebuilt.  ALSO NOTE:  When the codebase is rebuilt, it does NOT automatically run\nupdate.php on the site. You must do this manually. See the  Updating farmOS \npage (specifically the steps for clearing cache and running database updates)\nfor more details.", 
            "title": "Rebuilding the codebase"
        }, 
        {
            "location": "/development/docker/#local-development-with-docker-compose", 
            "text": "The recommended approach for local farmOS development in Docker is to use Docker Compose  to build both the farmOS container and the MySQL database\ncontainer.  The  docker-compose.yml  file included with farmOS sets  FARMOS_DEV  to  true \nby default, so it is intended only for development purposes at this time.", 
            "title": "Local development with Docker Compose"
        }, 
        {
            "location": "/development/docker/#install-docker-and-docker-compose", 
            "text": "First, install Docker and Docker Compose:   Install Docker  On Mac OS X, use \"dlite\" (not \"Docker for Mac\" or \"Docker Toolbox\")  On Windows, use \"Docker for Windows\" (not \"Docker Toolbox\")  On Linux, follow the directions on docker.com    Install Docker Compose", 
            "title": "Install Docker and Docker Compose"
        }, 
        {
            "location": "/development/docker/#mac-specific-instructions", 
            "text": "Due to  performance issues  with shared volumes in Docker for Mac,  dlite  is\ncurrently the suggested way to host Docker images. The following sections\ndescribe how to install dlite and start/stop containers:", 
            "title": "Mac Specific Instructions"
        }, 
        {
            "location": "/development/docker/#installing", 
            "text": "Download the latest release from  dlite releases  on GitHub  Extract dlite from the tarball and copy it to  /usr/local/bin/dlite  Run:  chmod +x /usr/local/bin/dlite  Initialize dlite by running:  dlite init  Start dlite host by running:  dlite start", 
            "title": "Installing"
        }, 
        {
            "location": "/development/docker/#starting", 
            "text": "Proceed with  Create Containers  Fix networking by running  docker network connect bridge farmos_www_1  Proceed with  Install farmOS  at  http://farmos_www_1.docker", 
            "title": "Starting"
        }, 
        {
            "location": "/development/docker/#stopping", 
            "text": "Run:  docker-compose stop  Remove networking:  docker network disconnect bridge farmos_www_1", 
            "title": "Stopping"
        }, 
        {
            "location": "/development/docker/#create-containers", 
            "text": "To create the farmOS Docker containers, first clone the farmOS repository:  git clone https://github.com/farmOS/farmOS.git   cd farmOS  Then, use  docker-compose up  to create the containers:  sudo docker-compose up  This will create two containers: a farmOS application container, and a MySQL\ndatabase container.  Note:  It will take some time for the containers to start the first time.\nThis is because the farmOS codebase needs to be built when the container is run\n(it is not built in the image itself). For this reason, you might not want to\nuse the  -d  flag at the end of  sudo docker-compose up , so that you can see\nthe progress. Once it is built, stopping and starting the container is very\nquick.", 
            "title": "Create containers"
        }, 
        {
            "location": "/development/docker/#persistent-volumes", 
            "text": "The docker-compose.yml file defines two Docker volumes that will be available on\nyour host system:   /var/html/www  from the farmOS application container  /var/lib/mysql  from the MySQL database container   Both will be made available within a  .data  directory in the farmOS repository\non the host. This is where you will be able to access the code for development\npurposes. It is also how your database and files are persisted when the\ncontainers are destroyed and rebuilt.", 
            "title": "Persistent volumes"
        }, 
        {
            "location": "/development/docker/#install-farmos", 
            "text": "Once the containers are up and running, you can install farmOS using the Drupal\ninstaller. This is a simple step-by-step process that you will need to go\nthrough when you first access the site in your browser.  To find the IP address of your farmOS container, use the following command:  sudo docker inspect --format '{{ .NetworkSettings.Networks.farmos_default.IPAddress }}' farmos_www_1  Visit the IP address in a browser - you should see the Drupal/farmOS installer.  In the \"Set up database\" step of installation, use the following values:   Database name:  farmos  Database username:  farmos  Database password:  farmos  Under \"Advanced options\", change \"Database host\" to:  db   Follow the instructions to continue with the installation and you should be left\nwith a fully-functioning farmOS instance running in a Docker container!", 
            "title": "Install farmOS"
        }, 
        {
            "location": "/development/docker/#stopstart-containers", 
            "text": "To stop your running containers:  sudo docker-compose stop  To start your containers:  sudo docker-compose start", 
            "title": "Stop/start containers"
        }, 
        {
            "location": "/community/contribute/", 
            "text": "Contribute\n\n\nThere are many ways to get involved in the farmOS community! You don't need to\nbe a programmer.\n\n\nUse farmOS\n\n\nFirst and foremost: use farmOS!\n\n\nBuilding a critical mass of farmOS users is the best way for the project to grow\nand thrive.\n\n\nIf you are not already in the habit of tracking your farm's assets and\nactivities, farmOS is a great tool to get started with.\n\n\nOr, if you know farmers who are in need of a record keeping tool - tell them\nabout farmOS!\n\n\nFarmier\n offers farmOS hosting, and all proceeds go towards future development.\n\n\nFeature requests, Bug reports, etc\n\n\nIf you have ideas for new features or modules that can be built on farmOS, or\nif you find bugs, add them to the \nissue queues\n.\n\n\nPlanning and General Discussion\n\n\nThe farmOS community hosts a \nfarmOS Monthly Call\n via Google Hangouts. Anyone\nis welcome to join.\n\n\nYou can also chat with people any time in the \n#farmOS IRC channel on Freenode\n.\n\n\nSponsor Development\n\n\nIf you would like to see a specific feature in farmOS, consider sponsoring its\ndevelopment. Create a new support or feature request in the \nissue queues\n to\nget started.\n\n\nAll development thusfar has been done by volunteers in their free time. Showing\nsupport with a donation or other financial contribution is a great way to help\nthe project move forward.\n\n\nDocumentation\n\n\nIf you are interested in helping with documentation, create a new issue in the\n\nGithub issue queue\n. Or, fork the \nfarmOS.org repository\n on Github, make\nchanges, and create a pull request.\n\n\nDevelopment\n\n\nAre you a Drupal developer? Or a front-end JS developer? Or just a farmer with\nsome free time this winter? Consider getting involved in the farmOS development\nprocess. There's a lot to do! And the more folks who can get involved, the more\nwe'll get done! Feel free to jump into the \nissue queues\n to get started!", 
            "title": "Contribute"
        }, 
        {
            "location": "/community/contribute/#contribute", 
            "text": "There are many ways to get involved in the farmOS community! You don't need to\nbe a programmer.", 
            "title": "Contribute"
        }, 
        {
            "location": "/community/contribute/#use-farmos", 
            "text": "First and foremost: use farmOS!  Building a critical mass of farmOS users is the best way for the project to grow\nand thrive.  If you are not already in the habit of tracking your farm's assets and\nactivities, farmOS is a great tool to get started with.  Or, if you know farmers who are in need of a record keeping tool - tell them\nabout farmOS!  Farmier  offers farmOS hosting, and all proceeds go towards future development.", 
            "title": "Use farmOS"
        }, 
        {
            "location": "/community/contribute/#feature-requests-bug-reports-etc", 
            "text": "If you have ideas for new features or modules that can be built on farmOS, or\nif you find bugs, add them to the  issue queues .", 
            "title": "Feature requests, Bug reports, etc"
        }, 
        {
            "location": "/community/contribute/#planning-and-general-discussion", 
            "text": "The farmOS community hosts a  farmOS Monthly Call  via Google Hangouts. Anyone\nis welcome to join.  You can also chat with people any time in the  #farmOS IRC channel on Freenode .", 
            "title": "Planning and General Discussion"
        }, 
        {
            "location": "/community/contribute/#sponsor-development", 
            "text": "If you would like to see a specific feature in farmOS, consider sponsoring its\ndevelopment. Create a new support or feature request in the  issue queues  to\nget started.  All development thusfar has been done by volunteers in their free time. Showing\nsupport with a donation or other financial contribution is a great way to help\nthe project move forward.", 
            "title": "Sponsor Development"
        }, 
        {
            "location": "/community/contribute/#documentation", 
            "text": "If you are interested in helping with documentation, create a new issue in the Github issue queue . Or, fork the  farmOS.org repository  on Github, make\nchanges, and create a pull request.", 
            "title": "Documentation"
        }, 
        {
            "location": "/community/contribute/#development", 
            "text": "Are you a Drupal developer? Or a front-end JS developer? Or just a farmer with\nsome free time this winter? Consider getting involved in the farmOS development\nprocess. There's a lot to do! And the more folks who can get involved, the more\nwe'll get done! Feel free to jump into the  issue queues  to get started!", 
            "title": "Development"
        }, 
        {
            "location": "/community/monthly-call/", 
            "text": "Monthly Call\n\n\nThe farmOS community hosts a monthly call via Google Hangouts to discuss\ndevelopment and direction of the project. Anyone is welcome to join. Refer to\nthe schedule below, and use the \"Join Hangout\" link to join the call.\n\n\nJoin Hangout\n\n\nCalls are currently held on the second Wednesday of the month, at 1pm Eastern US\ntime.\n\n\nNote that Daylight Savings Time is observed in the US, so the time relative to\nGMT will change twice a year. The schedule below shows that actual GMT times for\neach call.\n\n\n2016 Schedule\n\n\nFebruary 10th @ 1pm EST / 6pm UTC\n\n\nMarch 9th @ 1pm EST / 6pm UTC\n\n\nApril 13th @ 1pm EST / 5pm UTC\n\n\nMay 11th @ 1pm EST / 5pm UTC\n  Postponed because of \nDrupalCon\n\n\nMay 18th @ 1pm EST / 5pm UTC\n\n\nJune 8th @ 1pm EST / 5pm UTC\n\n\nJuly 13th @ 1pm EST / 5pm UTC\n\n\nAugust 10th @ 1pm EST / 5pm UTC\n\n\nSeptember 14th @ 1pm EST / 5pm UTC\n\n\nOctober 12th @ 1pm EST / 5pm UTC\n Cancelled to welcome \nBen-J\n\n\nNovember 9th @ 1pm EST / 6pm UTC\n\n\nDecember 14th @ 1pm EST / 6pm UTC", 
            "title": "Monthly Call"
        }, 
        {
            "location": "/community/monthly-call/#monthly-call", 
            "text": "The farmOS community hosts a monthly call via Google Hangouts to discuss\ndevelopment and direction of the project. Anyone is welcome to join. Refer to\nthe schedule below, and use the \"Join Hangout\" link to join the call.", 
            "title": "Monthly Call"
        }, 
        {
            "location": "/community/monthly-call/#join-hangout", 
            "text": "Calls are currently held on the second Wednesday of the month, at 1pm Eastern US\ntime.  Note that Daylight Savings Time is observed in the US, so the time relative to\nGMT will change twice a year. The schedule below shows that actual GMT times for\neach call.", 
            "title": "Join Hangout"
        }, 
        {
            "location": "/community/monthly-call/#2016-schedule", 
            "text": "February 10th @ 1pm EST / 6pm UTC  March 9th @ 1pm EST / 6pm UTC  April 13th @ 1pm EST / 5pm UTC  May 11th @ 1pm EST / 5pm UTC   Postponed because of  DrupalCon  May 18th @ 1pm EST / 5pm UTC  June 8th @ 1pm EST / 5pm UTC  July 13th @ 1pm EST / 5pm UTC  August 10th @ 1pm EST / 5pm UTC  September 14th @ 1pm EST / 5pm UTC  October 12th @ 1pm EST / 5pm UTC  Cancelled to welcome  Ben-J  November 9th @ 1pm EST / 6pm UTC  December 14th @ 1pm EST / 6pm UTC", 
            "title": "2016 Schedule"
        }, 
        {
            "location": "/community/farms/", 
            "text": "Farms using farmOS\n\n\nThe following is a list of farms using farmOS. If you want your farm to be\nincluded in this list, add a comment to \nthis issue on Github\n.\n\n\nFiji\n\n\n\n\nNaitauba Gardens (Naitauba Island, Northern Lau Group)\n\n\n\n\nJamaica\n\n\n\n\nGrierfield Farms (Grierfield, St Ann)\n\n\n\n\nUnited States\n\n\n\n\nAll In Farm (Georgetown, Texas)\n\n\nCloud 9 Ranch (Greeneville, Tennessee)\n\n\nDouble Doc Ranch (Shell, Wyoming)\n\n\nHampton Plantation (Owings, Maryland)\n\n\nLiberty University Campus Farm (Rustburg, VA)\n\n\nMiles Smith Farm (Loudon, New Hampshire)\n\n\nNorth Mountain Pastures (Newport, Pennsylvania)\n\n\nPatroon Land Farm (Voorheesville, New York)\n\n\nStone Grown Farm (Mansfield, Connecticut)\n\n\nTuckaway Farm (Lee, New Hampshire)\n\n\nUniversity of New Hampshire (Durham, New Hampshire)\n\n\nWalden Creek Farm (Elgin, Texas)\n\n\nWolfe's Neck Farm (Freeport, Maine)", 
            "title": "Farms"
        }, 
        {
            "location": "/community/farms/#farms-using-farmos", 
            "text": "The following is a list of farms using farmOS. If you want your farm to be\nincluded in this list, add a comment to  this issue on Github .", 
            "title": "Farms using farmOS"
        }, 
        {
            "location": "/community/farms/#fiji", 
            "text": "Naitauba Gardens (Naitauba Island, Northern Lau Group)", 
            "title": "Fiji"
        }, 
        {
            "location": "/community/farms/#jamaica", 
            "text": "Grierfield Farms (Grierfield, St Ann)", 
            "title": "Jamaica"
        }, 
        {
            "location": "/community/farms/#united-states", 
            "text": "All In Farm (Georgetown, Texas)  Cloud 9 Ranch (Greeneville, Tennessee)  Double Doc Ranch (Shell, Wyoming)  Hampton Plantation (Owings, Maryland)  Liberty University Campus Farm (Rustburg, VA)  Miles Smith Farm (Loudon, New Hampshire)  North Mountain Pastures (Newport, Pennsylvania)  Patroon Land Farm (Voorheesville, New York)  Stone Grown Farm (Mansfield, Connecticut)  Tuckaway Farm (Lee, New Hampshire)  University of New Hampshire (Durham, New Hampshire)  Walden Creek Farm (Elgin, Texas)  Wolfe's Neck Farm (Freeport, Maine)", 
            "title": "United States"
        }, 
        {
            "location": "/community/maintainers/", 
            "text": "Maintainers\n\n\n\n\nMichael Stenta\n\n\n\n\nDrupal.org: \nm.stenta\n\n\nGithub: \nmstenta", 
            "title": "Maintainers"
        }, 
        {
            "location": "/community/maintainers/#maintainers", 
            "text": "", 
            "title": "Maintainers"
        }, 
        {
            "location": "/community/maintainers/#michael-stenta", 
            "text": "Drupal.org:  m.stenta  Github:  mstenta", 
            "title": "Michael Stenta"
        }, 
        {
            "location": "/community/supporters/", 
            "text": "Supporters\n\n\nThe farmOS project is made possible by many supporters.\n\n\nOrganizations\n\n\n\n\nFarmier\n\n\nFarm Hack\n\n\nGreen Start\n\n\nCornell Soil Health\n\n\nOpen Pipe Kit\n\n\nPublic Lab\n\n\nMapKnitter\n\n\nUSDA/NRCS Soil Survey\n\n\nGODAN\n\n\n\n\nIndividuals\n\n\n\n\nMichael Stenta\n\n\nDorn Cox\n\n\nRJ Steinert\n\n\nPol Dellaiera\n\n\nPhil Anzel\n\n\nJeff Warren\n\n\nSam Chapatwala\n\n\nJoel Baranick\n\n\nSvenn Are Bjerkem", 
            "title": "Supporters"
        }, 
        {
            "location": "/community/supporters/#supporters", 
            "text": "The farmOS project is made possible by many supporters.", 
            "title": "Supporters"
        }, 
        {
            "location": "/community/supporters/#organizations", 
            "text": "Farmier  Farm Hack  Green Start  Cornell Soil Health  Open Pipe Kit  Public Lab  MapKnitter  USDA/NRCS Soil Survey  GODAN", 
            "title": "Organizations"
        }, 
        {
            "location": "/community/supporters/#individuals", 
            "text": "Michael Stenta  Dorn Cox  RJ Steinert  Pol Dellaiera  Phil Anzel  Jeff Warren  Sam Chapatwala  Joel Baranick  Svenn Are Bjerkem", 
            "title": "Individuals"
        }, 
        {
            "location": "/community/press/", 
            "text": "Press\n\n\nfarmOS has been featured in the following articles. If you would like to write\nabout farmOS, \ncontact m.stenta\n.\n\n\n2016\n\n\n2016 November 24th\n \nGODAN: OPEN FARMS - GODAN Documentary Web Series - Episode 3\n\n\n2016 November 22nd\n \nCNBC: Silicon Valley cultivates a life on the American family farm\n\n\n2016 November 4th\n \nPC Magazine: Smart Farms: Big Data Meets Big Ag\n\n\n2016 September 20th\n \nFarm Hack: Farm Hack @ the Smithsonian Cooper Hewitt Design Museum\n\n\n2016 September 4th\n \nCT NOFA Geanings Newsletter: farmOS Workshop at 2016 NOFA Summer Conference on YouTube\n\n\n2016 August 29th\n \nFarm Hack: Video: FarmOS @ NOFA summer conference\n\n\n2016 July 30th\n \nATTRA Sustainable Agriculture: farmOS Releases Beta 12 Version and Beekeeping Module\n\n\n2016 April 19th\n \nCooper Hewitt: COOPER HEWITT TO PRESENT \"BY THE PEOPLE: DESIGNING A BETTER AMERICA\"\n\n\n2016 April 1st\n \nLancaster Farming: Using 'Big Data' Can Prevent Big Problems on the Farm\n\n\n2015\n\n\n2015 December 13th\n \nFarm Hack: FarmOS: A Drupal-based farm management solution\n\n\n2015 November 30th\n \nFarm Hack: Integrating Open Source: the Open Agriculture Learning Series\n\n\n2015 November 27th\n \nopensource.com: Top 5: Drupal-based farmOS, Blender for astrophysics, Qora cryptocurrency, and more\n\n\n2015 November 24th\n \nopensource.com: Drupal-based farmOS manages food, farmers, and community\n\n\n2015 November 16th\n \nMakery: Sensprout and Techrice, Japanese prototypes for agriculture\n\n\n2015 November 9th\n \nThe Greenhorns: it\u2019s like a csa \u2013 but with software\n\n\n2015 October 2nd\n \nHNGN: Robots, iPhones Now Make Tending Crops Easier For Farmers\n\n\n2015 September 22nd\n \nPopular Science: Let the Robots and iPhones Tend the Crops\n\n\n2015 April 19th\n \nThe Greenhorns: proving that not all farmers are luddites\n\n\n2015 March 30th\n \nThe Greenhorns: farmOS beta 1 release\n\n\n2014\n\n\n2014 December 25th\n \nOur World (United Nations University): Open Sauce/Source for the Food Revolution\n\n\n2014 November 27th\n \nopensource.com: The new food revolution is open", 
            "title": "Press"
        }, 
        {
            "location": "/community/press/#press", 
            "text": "farmOS has been featured in the following articles. If you would like to write\nabout farmOS,  contact m.stenta .", 
            "title": "Press"
        }, 
        {
            "location": "/community/press/#2016", 
            "text": "2016 November 24th   GODAN: OPEN FARMS - GODAN Documentary Web Series - Episode 3  2016 November 22nd   CNBC: Silicon Valley cultivates a life on the American family farm  2016 November 4th   PC Magazine: Smart Farms: Big Data Meets Big Ag  2016 September 20th   Farm Hack: Farm Hack @ the Smithsonian Cooper Hewitt Design Museum  2016 September 4th   CT NOFA Geanings Newsletter: farmOS Workshop at 2016 NOFA Summer Conference on YouTube  2016 August 29th   Farm Hack: Video: FarmOS @ NOFA summer conference  2016 July 30th   ATTRA Sustainable Agriculture: farmOS Releases Beta 12 Version and Beekeeping Module  2016 April 19th   Cooper Hewitt: COOPER HEWITT TO PRESENT \"BY THE PEOPLE: DESIGNING A BETTER AMERICA\"  2016 April 1st   Lancaster Farming: Using 'Big Data' Can Prevent Big Problems on the Farm", 
            "title": "2016"
        }, 
        {
            "location": "/community/press/#2015", 
            "text": "2015 December 13th   Farm Hack: FarmOS: A Drupal-based farm management solution  2015 November 30th   Farm Hack: Integrating Open Source: the Open Agriculture Learning Series  2015 November 27th   opensource.com: Top 5: Drupal-based farmOS, Blender for astrophysics, Qora cryptocurrency, and more  2015 November 24th   opensource.com: Drupal-based farmOS manages food, farmers, and community  2015 November 16th   Makery: Sensprout and Techrice, Japanese prototypes for agriculture  2015 November 9th   The Greenhorns: it\u2019s like a csa \u2013 but with software  2015 October 2nd   HNGN: Robots, iPhones Now Make Tending Crops Easier For Farmers  2015 September 22nd   Popular Science: Let the Robots and iPhones Tend the Crops  2015 April 19th   The Greenhorns: proving that not all farmers are luddites  2015 March 30th   The Greenhorns: farmOS beta 1 release", 
            "title": "2015"
        }, 
        {
            "location": "/community/press/#2014", 
            "text": "2014 December 25th   Our World (United Nations University): Open Sauce/Source for the Food Revolution  2014 November 27th   opensource.com: The new food revolution is open", 
            "title": "2014"
        }, 
        {
            "location": "/community/trademark/", 
            "text": "farmOS Trademark Guidelines\n\n\nVersion 1.0, November 2016\n\n\nIntroduction\n\n\nThis document, the \"Policy,\" outlines the farmOS project's (the \"Project\")\npolicy for the use of our trademarks. While our software is available under a\nfree and open source software license, the copyright license does not include an\nimplied right or license to use our trademark.\n\n\nThe role of trademarks is to provide assurance about the quality of the products\nor services with which the trademark is associated. But because an open source\nlicense allows your unrestricted modification of the copyrighted software, we\ncannot be sure that your modifications to the software are ones that will not be\nmisleading if distributed under the same name. Instead, this Policy describes\nthe circumstances under which you may use our trademarks.\n\n\nIn this Policy we are not trying to limit the lawful use of our trademarks, but\nrather describe for you what we consider the parameters of lawful use to be.\nTrademark law can be ambiguous, so we hope to provide enough clarity for you to\nunderstand whether we will consider your use licensed or non-infringing.\n\n\nThe sections that follow describe what trademarks are covered by this Policy, as\nwell as uses of the trademarks that are allowed without additional permission\nfrom us. If you want to use our trademarks in ways that are not described in\nthis Policy, please see \"Where to get further information\" below for contact\ninformation. Any use that does not comply with this Policy or for which we have\nnot separately provided written permission is not a use that we have approved,\nso you must decide for yourself whether the use is nevertheless lawful.\n\n\nOur commitment to open source principles\n\n\nWe want to encourage and facilitate the use of our trademarks by the community,\nbut do so in a way that still ensures that the trademarks are meaningful as a\nsource and quality indicator for our software and the associated goods and\nservices and continue to embody the high reputation of the software and the\ncommunity associated with it. This Policy therefore tries to strike the proper\nbalance between: 1) our need to ensure that our trademarks remain reliable\nindicators of the qualities that they are meant to preserve and 2) our community\nmembers' desire to be full participants in the Project.\n\n\nTrademarks subject to the guidelines\n\n\nOur trademarks\n\n\nThis Policy covers:\n\n\n\n\nOur word trademarks and service marks (the \"Word Marks\"):\n\n\n\n\n\n\n\n\n\n\nMark\n\n\nCommon descriptive name for the goods or services\n\n\n\n\n\n\n\n\n\n\nfarmOS\n\n\nComputer software for use in farm planning and management\n\n\n\n\n\n\n\n\n\n\nOur logos (the \"Logos\"):\n\n\n\n\n\n\n\n\nAnd the unique visual styling of our website and packaging (the \"Trade\nDress\").\n\n\n\n\nThis Policy encompasses all trademarks and service marks, whether Word Marks,\nLogos or Trade Dress, which are collectively referred to as the \u201cMarks.\u201d Some\nMarks may not be registered, but registration does not equal ownership of\ntrademarks. This Policy covers our Marks whether they are registered or not.\n\n\nUniversal considerations for all uses\n\n\nWhenever you use one of the Marks, you must always do so in a way that does not\nmislead anyone, either directly or by omission, about exactly what they are\ngetting and from whom. The law reflects this requirement in two major ways\ndescribed in more detail below: it prohibits creating a \"likelihood of\nconfusion\" but allows for \"nominative use.\" For example, you cannot say you are\ndistributing the farmOS software when you're distributing a modified version of\nit, because people would be confused when they are not getting the same features\nand functionality they would get if they downloaded the software directly from\nus. You also cannot use our logo on your website in a way that suggests that\nyour website is an official website or that we endorse your website. You can,\nthough, say you like the farmOS software, that you participate in the farmOS\ncommunity, that you are providing an unmodified version of the farmOS software,\nor that you wrote a book describing how to use the farmOS software.\n\n\nThis fundamental requirement, that it is always clear to people what they are\ngetting and from whom, is reflected throughout this Policy. It should also serve\nas your guide if you are not sure about how you are using the Marks.\n\n\nIn addition:\n\n\n\n\nYou may not use the Marks in association with the use or distribution of\nsoftware if you are also not in compliance with the copyright license for the\nsoftware.\n\n\nYou may not use or register, in whole or in part, the Marks as part of your own\ntrademark, service mark, domain name, company name, trade name, product name or\nservice name.\n\n\nTrademark law does not allow your use of names or trademarks that are too\nsimilar to ours. You therefore may not use an obvious variation of any of our\nMarks or any phonetic equivalent, foreign language equivalent, takeoff, or\nabbreviation for a similar or compatible product or service. We would consider\nthe following too similar to one of our Marks:\n\n\nAny mark beginning or ending with the letters FARMOS\n\n\n\n\n\n\n\n\nYou agree that you will not acquire any rights in the Marks and that any\ngoodwill generated by your use of the Marks inures solely to our benefit.\n\n\nUse for software\n\n\nSee \nUniversal considerations for all uses\n, above, which also apply.\n\n\nUses we consider non-infringing\n\n\nDistribution of unmodified source code or unmodified executable code we have compiled\n\n\nWhen you redistribute an unmodified copy of our software, you are not changing\nthe quality or nature of it. Therefore, you may retain the Word Marks and the\nLogos we have placed on the software to identify your redistribution -- whether\nthat redistribution is made by optical media, memory stick or download of\nunmodified source and executable code. This kind of use only applied if you are\nredistributing an official distribution from this Project that has not been\nchanged in any way. You can find files for the Logos and approved designs for\npackaging on farmOS.org.\n\n\nDistribution of executable code that you have compiled, or modified code\n\n\nYou may use the Word Marks, but not the Logos, to truthfully describe the origin\nof the software that you are providing, that is, that the code you are\ndistributing is a modification of our software. You may say, for example, that\n\"this software is derived from the source code for farmOS software.\"\n\n\nYou will need to remove the Logo data files.\n\n\nOf course, you can place your own trademarks or logos on versions of the\nsoftware to which you have made substantive modifications, because by modifying\nthe software you have become the origin of that exact version. In that case, you\nshould not use our Logos.\n\n\nStatements about compatibility, interoperability or derivation\n\n\nYou may use the Word Marks, but not the Logos, to truthfully describe the\nrelationship between your software and ours. Our Mark should be used after a\nverb or preposition that describes the relationship between your software and\nours. So you may say, for example, \"Bob's software for the farmOS platform\" but\nmay not say \"Bob's farmOS software.\" Some other examples that may work for you\nare:\n\n\n\n\n[Your software] works with farmOS software\n\n\n[Your software] uses farmOS software\n\n\n[Your software] is compatible with farmOS software\n\n\n[Your software] is powered by farmOS software\n\n\n[Your software] runs on farmOS software\n\n\n[Your software] for use with farmOS software\n\n\n[Your software] for farmOS software\n\n\n\n\nUse of trademarks to show community affiliation\n\n\nThis section discusses the use of our Marks for software such an application\nthemes, skins and personas. The use of our Marks on websites is discussed below.\n\n\nYou may use the Word Marks and the Logos in themes, personas, or skins for\napplications to show your support for the Project, provided that the use is\nnon-commercial and the use is clearly decorative, as contrasted with a use that\nappears to be the branding for a website or application.\n\n\nUses for which we are granting a license\n\n\nDistribution of modified software\n\n\nYou may use the Word Marks and the Logos for the distribution of code (source or\nexecutable) on the condition that any executable is built from the official\nProject source code and that any modifications are limited to switching on or\noff features already included in the software, translations into other\nlanguages, and incorporating bug-fix patches.\n\n\nDistribution of software preloaded on hardware\n\n\nYou may use the Word Marks and the Logos in association with hardware devices on\nthe condition that the executable installed on the device is the official source\nexecutable for the Project, and that you do not suggest that the Project is the\nsource of the hardware device itself but rather than the Marks are for the\nsoftware incorporated into the device.\n\n\nUses we consider infringing without seeking further permission from us\n\n\nWe will likely consider using the Marks in a software distribution that combines\nour software with any other software program an infringement of our Marks. We\nwould consider your software \"combined\" with ours if you create a single\nexecutable for both software programs, as well as if by installing our software\nit automatically installs yours. We would not consider your software \"combined\"\nwith ours if it is on the same media but requires separate, independent action\nto install it.\n\n\nUse for non-software goods and services\n\n\nSee \nUniversal considerations for all uses\n, above, which also apply.\n\n\nUses we consider non-infringing\n\n\nWebsites\n\n\nYou may use the Word Marks and Logos, but not the Trade Dress, on your webpage\nto show your support for the Project as long as:\n\n\n\n\nThe website has branding that is easily distinguished from the Project Trade\nDress;\n\n\nYour own branding or naming is more prominent than any Project Marks;\n\n\nThe Logos hyperlink to the Project website;\n\n\nThe site does not mislead customers into thinking that either your website,\nservice, or product is our website, service, or product; and\n\n\nThe site clearly states that you are not affiliated with or endorsed by the\nProject.\n\n\n\n\nPublications and presentations\n\n\nYou can use the Word Marks in book and article titles, and the Logo in\nillustrations within the document, as long as the use does not suggest that we\nhave published, endorse, or agree with your work.\n\n\nEvents\n\n\nYou can use the Logo and signage from farmOS.org to promote the software and\nProject at events.\n\n\nUses for which we are granting a license\n\n\nUser groups\n\n\nYou can use the Word Marks as part of your user group name provided that:\n\n\n\n\nThe main focus of the group is the software;\n\n\nAny software or services the group provides are without cost;\n\n\nThe group does not make a profit;\n\n\nAny charge to attend meetings are to cover the cost of the venue, food and\ndrink only.\n\n\n\n\nNote that the \nUniversal considerations for all uses\n, above, still apply,\nspecifically, that you may not use or register the Marks as part of your own\ntrademark, service mark, domain name, company name, trade name, product name or\nservice name.\n\n\nPromotional goods\n\n\n\"Promotional goods\" are non-software goods that use the Marks and that are\nintended to advertise the Project, promote the Project, or show membership in\nthe Project community.\n\n\nYou may make stickers, hats, T-shirts, hoodies, and other promotional items for\nfree giveaway at open source conferences and events using only the designs found\non farmOS.org\n\n\nUses we consider infringing without seeking further permission from us\n\n\nWe will likely consider using the Marks as part of a domain name or subdomain an\ninfringement of our Marks.\n\n\nWe would likely consider using the Marks on promotional goods for sale an\ninfringement of our Marks.\n\n\nGeneral Information\n\n\nTrademark marking and legends\n\n\nThe first or most prominent mention of a Mark on a webpage, document, packaging,\nor documentation should be accompanied by a symbol indicating whether the mark\nis a registered trademark (\"\u00ae\") or an unregistered trademark (\"\u2122\"). See our Trademark List for the correct symbol to use.\n\n\nAlso, if you are using our Marks in a way described in the sections \"Uses for\nwhich we are granting a license,\" please put following notice at the foot of the\npage where you have used the Mark (or, if in a book, on the credits page), on\nany packaging or labeling, and on advertising or marketing materials:\n\n\n\"farmOS is a registered trademark of Michel Stenta\"\n\n\nWhat to do when you see abuse\n\n\nIf you are aware of any confusing use or misuse of the Marks in any way, we\nwould appreciate you bringing this to our attention. Please contact us as\ndescribed below so that we can investigate it further.\n\n\nWhere to get further information\n\n\nIf you have any questions about this Policy, would like to speak with us about\nthe use of our Marks in ways not described in the Policy, or see any abuse of\nour Marks, please \ncontact Michael Stenta\n.\n\n\nGeneral considerations about trademarks and their use\n\n\nWhat trademark law is about\n\n\nWhat is a trademark?\n\n\nA trademark is a word, phrase, symbol or design, or a combination of words,\nphrases, symbols or designs, that identifies and distinguishes the source of the\ngoods of one party from those of others. A service mark is the same as a\ntrademark, except that it identifies and distinguishes the source of a service\nrather than a product. \"Trade dress\" or \"get up\" refers to the look and feel of\nthe packaging, which in this context can include the layout, colors, images, and\ndesign choices in a web page. Throughout this Policy, the terms \"trademark\" and\n\"mark\" refer to both trademarks, service marks and trade dress.\n\n\nHowever, the use of a word is \"not as a trademark\" when it is used functionally\nas part of the software program, for example, in a file, folder, directory, or\npath name. Use in this way is not a trademark infringement.\n\n\nWhat is \"likelihood of confusion\"?\n\n\nThere is trademark infringement if your use of a trademark has created a\n\"likelihood of confusion.\" This means using a trademark in a way that will\nlikely confuse or deceive the relevant consuming public about the source of a\nproduct or service using the mark in question. For example, if the \"Foo\"\nsoftware extension removes all double spaces after periods, but someone else\nlater creates \"Foo\" software that adds a third space after periods, consumers\nwould be confused between the two and the newcomer will likely be a trademark\ninfringer. As another example, if a company makes \"Foobar\" software and a third\nparty offers training called \"Foobar Certification,\" a person is likely to\nbelieve, wrongly, that the certification is being offered by the makers of\nFoobar software. The third party has likely misled consumers about the source of\nits training and is a trademark infringer.\n\n\nWhat is \"nominative\" use?\n\n\nSo-called \"nominative use\" (or \"nominative fair use\"), which is the name of the\ndoctrine under U.S. trademark law, allows the use of another's trademark where\nit is necessary for understanding. Other countries' trademark laws also have\nsimilar provisions. For example, a car repair shop that specializes in a\nparticular brand of automobile, VW for example, must be allowed to say that they\nrepair VW cars. Here is what you should consider when deciding whether your use\nof a trademark is a nominative fair use:\n\n\n\n\nWhether you can identify the product or service in question without using the\ntrademark;\n\n\nWhether you are avoiding a likelihood of confusion in the way that you have\nused the trademark; and\n\n\nWhether you have used only as much as is necessary to identify the product or\nservice.\n\n\n\n\nWith our \"Foobar Certification\" example above, the person offering the\ncertification would be allowed to say, under the nominative fair use doctrine,\nthat she is offering \"Maude's Certification for Foobar software.\"\n\n\nIt is almost never the case that using a Logo will be a nominative fair use\nsince it will be a rare case where the logo is needed for strictly informational\npurposes.\n\n\nProper trademark use\n\n\nThese rules hold true for all trademarks, not just ours, so you should follow\nthem for our Marks as well as anyone else's.\n\n\nUse of trademarks in text\n\n\nAlways distinguish trademarks from surrounding text with at least initial\ncapital letters or in all capital letters.\n\n\nNote that with the farmOS mark, an exception is made in that the first letter\ncan be lowercase, but \"OS\" must be capitalized.\n\n\n\n\nUnacceptable: farmos\n\n\nAcceptable: FarmOS, FARMOS, farmOS\n\n\n\n\nAlways use trademarks in their exact form with the correct spelling, neither\nabbreviated, hyphenated, or combined with any other word or words.\n\n\n\n\nUnacceptable: Farm OS, farm-OS\n\n\nAcceptable: farmOS\n\n\n\n\nDon't pluralize a trademark.\n\n\n\n\nUnacceptable: I have seventeen farmOSes running on my farm.\n\n\nAcceptable: I have seventeen farmOS instances running on my farm.\n\n\n\n\nDon't use \"a\" or \"the\" to refer to an instance of the trademark.\n\n\n\n\nUnacceptable: I put a farmOS on my mom's computer.\n\n\nAcceptable: I put a farmOS instance on my mom's computer.\n\n\n\n\nAlways use a trademark as an adjective modifying a noun. You can see the nouns\nwe prefer under \"Our trademarks.\"\n\n\n\n\nUnacceptable: This is a farmOS. Anyone can install it.\n\n\nAcceptable: This is a farmOS application. Anyone can install it.\n\n\n\n\nDon't use a trademark as a verb. Trademarks are products or services, never\nactions.\n\n\n\n\nUnacceptable: I farmOSed my computer today!\n\n\nAcceptable: I installed farmOS on my computer today!\n\n\n\n\nDon't use a trademark as a possessive. Instead, the following noun should be\nused in possessive form or the sentence reworded so there is no possessive.\n\n\n\n\nUnacceptable: farmOS's interface is very clean.\n\n\nAcceptable: The farmOS dashboard's interface is very clean.\n\n\n\n\nDon't translate a trademark into another language.\n\n\n\n\nAcceptable: Quiero instalar farmOS en mi sistema.\n\n\nUnacceptable: Quiero instalar granjaOS en mi sistema.\n\n\n\n\nUse of Logos\n\n\nYou may not change any Logo except to scale it. This means you may not add\ndecorative elements, change the colors, change the proportions, distort it, add\nelements, or combine it with other logos.\n\n\nHowever, when the context requires the use of black-and-white graphics and the\nlogo is color, you may reproduce the logo in a manner that produces a\nblack-and-white image.\n\n\n\n\nThese guidelines are based on the Model Trademark Guidelines, available at \n\nhttp://www.modeltrademarkguidelines.org\n, used under a Creative Commons\nAttribution 3.0 Unported license:\n\nhttps://creativecommons.org/licenses/by/3.0/deed.en_US", 
            "title": "Trademark"
        }, 
        {
            "location": "/community/trademark/#farmos-trademark-guidelines", 
            "text": "Version 1.0, November 2016", 
            "title": "farmOS Trademark Guidelines"
        }, 
        {
            "location": "/community/trademark/#introduction", 
            "text": "This document, the \"Policy,\" outlines the farmOS project's (the \"Project\")\npolicy for the use of our trademarks. While our software is available under a\nfree and open source software license, the copyright license does not include an\nimplied right or license to use our trademark.  The role of trademarks is to provide assurance about the quality of the products\nor services with which the trademark is associated. But because an open source\nlicense allows your unrestricted modification of the copyrighted software, we\ncannot be sure that your modifications to the software are ones that will not be\nmisleading if distributed under the same name. Instead, this Policy describes\nthe circumstances under which you may use our trademarks.  In this Policy we are not trying to limit the lawful use of our trademarks, but\nrather describe for you what we consider the parameters of lawful use to be.\nTrademark law can be ambiguous, so we hope to provide enough clarity for you to\nunderstand whether we will consider your use licensed or non-infringing.  The sections that follow describe what trademarks are covered by this Policy, as\nwell as uses of the trademarks that are allowed without additional permission\nfrom us. If you want to use our trademarks in ways that are not described in\nthis Policy, please see \"Where to get further information\" below for contact\ninformation. Any use that does not comply with this Policy or for which we have\nnot separately provided written permission is not a use that we have approved,\nso you must decide for yourself whether the use is nevertheless lawful.", 
            "title": "Introduction"
        }, 
        {
            "location": "/community/trademark/#our-commitment-to-open-source-principles", 
            "text": "We want to encourage and facilitate the use of our trademarks by the community,\nbut do so in a way that still ensures that the trademarks are meaningful as a\nsource and quality indicator for our software and the associated goods and\nservices and continue to embody the high reputation of the software and the\ncommunity associated with it. This Policy therefore tries to strike the proper\nbalance between: 1) our need to ensure that our trademarks remain reliable\nindicators of the qualities that they are meant to preserve and 2) our community\nmembers' desire to be full participants in the Project.", 
            "title": "Our commitment to open source principles"
        }, 
        {
            "location": "/community/trademark/#trademarks-subject-to-the-guidelines", 
            "text": "", 
            "title": "Trademarks subject to the guidelines"
        }, 
        {
            "location": "/community/trademark/#our-trademarks", 
            "text": "This Policy covers:   Our word trademarks and service marks (the \"Word Marks\"):      Mark  Common descriptive name for the goods or services      farmOS  Computer software for use in farm planning and management      Our logos (the \"Logos\"):     And the unique visual styling of our website and packaging (the \"Trade\nDress\").   This Policy encompasses all trademarks and service marks, whether Word Marks,\nLogos or Trade Dress, which are collectively referred to as the \u201cMarks.\u201d Some\nMarks may not be registered, but registration does not equal ownership of\ntrademarks. This Policy covers our Marks whether they are registered or not.", 
            "title": "Our trademarks"
        }, 
        {
            "location": "/community/trademark/#universal-considerations-for-all-uses", 
            "text": "Whenever you use one of the Marks, you must always do so in a way that does not\nmislead anyone, either directly or by omission, about exactly what they are\ngetting and from whom. The law reflects this requirement in two major ways\ndescribed in more detail below: it prohibits creating a \"likelihood of\nconfusion\" but allows for \"nominative use.\" For example, you cannot say you are\ndistributing the farmOS software when you're distributing a modified version of\nit, because people would be confused when they are not getting the same features\nand functionality they would get if they downloaded the software directly from\nus. You also cannot use our logo on your website in a way that suggests that\nyour website is an official website or that we endorse your website. You can,\nthough, say you like the farmOS software, that you participate in the farmOS\ncommunity, that you are providing an unmodified version of the farmOS software,\nor that you wrote a book describing how to use the farmOS software.  This fundamental requirement, that it is always clear to people what they are\ngetting and from whom, is reflected throughout this Policy. It should also serve\nas your guide if you are not sure about how you are using the Marks.  In addition:   You may not use the Marks in association with the use or distribution of\nsoftware if you are also not in compliance with the copyright license for the\nsoftware.  You may not use or register, in whole or in part, the Marks as part of your own\ntrademark, service mark, domain name, company name, trade name, product name or\nservice name.  Trademark law does not allow your use of names or trademarks that are too\nsimilar to ours. You therefore may not use an obvious variation of any of our\nMarks or any phonetic equivalent, foreign language equivalent, takeoff, or\nabbreviation for a similar or compatible product or service. We would consider\nthe following too similar to one of our Marks:  Any mark beginning or ending with the letters FARMOS     You agree that you will not acquire any rights in the Marks and that any\ngoodwill generated by your use of the Marks inures solely to our benefit.", 
            "title": "Universal considerations for all uses"
        }, 
        {
            "location": "/community/trademark/#use-for-software", 
            "text": "See  Universal considerations for all uses , above, which also apply.", 
            "title": "Use for software"
        }, 
        {
            "location": "/community/trademark/#uses-we-consider-non-infringing", 
            "text": "", 
            "title": "Uses we consider non-infringing"
        }, 
        {
            "location": "/community/trademark/#distribution-of-unmodified-source-code-or-unmodified-executable-code-we-have-compiled", 
            "text": "When you redistribute an unmodified copy of our software, you are not changing\nthe quality or nature of it. Therefore, you may retain the Word Marks and the\nLogos we have placed on the software to identify your redistribution -- whether\nthat redistribution is made by optical media, memory stick or download of\nunmodified source and executable code. This kind of use only applied if you are\nredistributing an official distribution from this Project that has not been\nchanged in any way. You can find files for the Logos and approved designs for\npackaging on farmOS.org.", 
            "title": "Distribution of unmodified source code or unmodified executable code we have compiled"
        }, 
        {
            "location": "/community/trademark/#distribution-of-executable-code-that-you-have-compiled-or-modified-code", 
            "text": "You may use the Word Marks, but not the Logos, to truthfully describe the origin\nof the software that you are providing, that is, that the code you are\ndistributing is a modification of our software. You may say, for example, that\n\"this software is derived from the source code for farmOS software.\"  You will need to remove the Logo data files.  Of course, you can place your own trademarks or logos on versions of the\nsoftware to which you have made substantive modifications, because by modifying\nthe software you have become the origin of that exact version. In that case, you\nshould not use our Logos.", 
            "title": "Distribution of executable code that you have compiled, or modified code"
        }, 
        {
            "location": "/community/trademark/#statements-about-compatibility-interoperability-or-derivation", 
            "text": "You may use the Word Marks, but not the Logos, to truthfully describe the\nrelationship between your software and ours. Our Mark should be used after a\nverb or preposition that describes the relationship between your software and\nours. So you may say, for example, \"Bob's software for the farmOS platform\" but\nmay not say \"Bob's farmOS software.\" Some other examples that may work for you\nare:   [Your software] works with farmOS software  [Your software] uses farmOS software  [Your software] is compatible with farmOS software  [Your software] is powered by farmOS software  [Your software] runs on farmOS software  [Your software] for use with farmOS software  [Your software] for farmOS software", 
            "title": "Statements about compatibility, interoperability or derivation"
        }, 
        {
            "location": "/community/trademark/#use-of-trademarks-to-show-community-affiliation", 
            "text": "This section discusses the use of our Marks for software such an application\nthemes, skins and personas. The use of our Marks on websites is discussed below.  You may use the Word Marks and the Logos in themes, personas, or skins for\napplications to show your support for the Project, provided that the use is\nnon-commercial and the use is clearly decorative, as contrasted with a use that\nappears to be the branding for a website or application.", 
            "title": "Use of trademarks to show community affiliation"
        }, 
        {
            "location": "/community/trademark/#uses-for-which-we-are-granting-a-license", 
            "text": "", 
            "title": "Uses for which we are granting a license"
        }, 
        {
            "location": "/community/trademark/#distribution-of-modified-software", 
            "text": "You may use the Word Marks and the Logos for the distribution of code (source or\nexecutable) on the condition that any executable is built from the official\nProject source code and that any modifications are limited to switching on or\noff features already included in the software, translations into other\nlanguages, and incorporating bug-fix patches.", 
            "title": "Distribution of modified software"
        }, 
        {
            "location": "/community/trademark/#distribution-of-software-preloaded-on-hardware", 
            "text": "You may use the Word Marks and the Logos in association with hardware devices on\nthe condition that the executable installed on the device is the official source\nexecutable for the Project, and that you do not suggest that the Project is the\nsource of the hardware device itself but rather than the Marks are for the\nsoftware incorporated into the device.", 
            "title": "Distribution of software preloaded on hardware"
        }, 
        {
            "location": "/community/trademark/#uses-we-consider-infringing-without-seeking-further-permission-from-us", 
            "text": "We will likely consider using the Marks in a software distribution that combines\nour software with any other software program an infringement of our Marks. We\nwould consider your software \"combined\" with ours if you create a single\nexecutable for both software programs, as well as if by installing our software\nit automatically installs yours. We would not consider your software \"combined\"\nwith ours if it is on the same media but requires separate, independent action\nto install it.", 
            "title": "Uses we consider infringing without seeking further permission from us"
        }, 
        {
            "location": "/community/trademark/#use-for-non-software-goods-and-services", 
            "text": "See  Universal considerations for all uses , above, which also apply.", 
            "title": "Use for non-software goods and services"
        }, 
        {
            "location": "/community/trademark/#uses-we-consider-non-infringing_1", 
            "text": "", 
            "title": "Uses we consider non-infringing"
        }, 
        {
            "location": "/community/trademark/#websites", 
            "text": "You may use the Word Marks and Logos, but not the Trade Dress, on your webpage\nto show your support for the Project as long as:   The website has branding that is easily distinguished from the Project Trade\nDress;  Your own branding or naming is more prominent than any Project Marks;  The Logos hyperlink to the Project website;  The site does not mislead customers into thinking that either your website,\nservice, or product is our website, service, or product; and  The site clearly states that you are not affiliated with or endorsed by the\nProject.", 
            "title": "Websites"
        }, 
        {
            "location": "/community/trademark/#publications-and-presentations", 
            "text": "You can use the Word Marks in book and article titles, and the Logo in\nillustrations within the document, as long as the use does not suggest that we\nhave published, endorse, or agree with your work.", 
            "title": "Publications and presentations"
        }, 
        {
            "location": "/community/trademark/#events", 
            "text": "You can use the Logo and signage from farmOS.org to promote the software and\nProject at events.", 
            "title": "Events"
        }, 
        {
            "location": "/community/trademark/#uses-for-which-we-are-granting-a-license_1", 
            "text": "", 
            "title": "Uses for which we are granting a license"
        }, 
        {
            "location": "/community/trademark/#user-groups", 
            "text": "You can use the Word Marks as part of your user group name provided that:   The main focus of the group is the software;  Any software or services the group provides are without cost;  The group does not make a profit;  Any charge to attend meetings are to cover the cost of the venue, food and\ndrink only.   Note that the  Universal considerations for all uses , above, still apply,\nspecifically, that you may not use or register the Marks as part of your own\ntrademark, service mark, domain name, company name, trade name, product name or\nservice name.", 
            "title": "User groups"
        }, 
        {
            "location": "/community/trademark/#promotional-goods", 
            "text": "\"Promotional goods\" are non-software goods that use the Marks and that are\nintended to advertise the Project, promote the Project, or show membership in\nthe Project community.  You may make stickers, hats, T-shirts, hoodies, and other promotional items for\nfree giveaway at open source conferences and events using only the designs found\non farmOS.org", 
            "title": "Promotional goods"
        }, 
        {
            "location": "/community/trademark/#uses-we-consider-infringing-without-seeking-further-permission-from-us_1", 
            "text": "We will likely consider using the Marks as part of a domain name or subdomain an\ninfringement of our Marks.  We would likely consider using the Marks on promotional goods for sale an\ninfringement of our Marks.", 
            "title": "Uses we consider infringing without seeking further permission from us"
        }, 
        {
            "location": "/community/trademark/#general-information", 
            "text": "", 
            "title": "General Information"
        }, 
        {
            "location": "/community/trademark/#trademark-marking-and-legends", 
            "text": "The first or most prominent mention of a Mark on a webpage, document, packaging,\nor documentation should be accompanied by a symbol indicating whether the mark\nis a registered trademark (\"\u00ae\") or an unregistered trademark (\"\u2122\"). See our Trademark List for the correct symbol to use.  Also, if you are using our Marks in a way described in the sections \"Uses for\nwhich we are granting a license,\" please put following notice at the foot of the\npage where you have used the Mark (or, if in a book, on the credits page), on\nany packaging or labeling, and on advertising or marketing materials:  \"farmOS is a registered trademark of Michel Stenta\"", 
            "title": "Trademark marking and legends"
        }, 
        {
            "location": "/community/trademark/#what-to-do-when-you-see-abuse", 
            "text": "If you are aware of any confusing use or misuse of the Marks in any way, we\nwould appreciate you bringing this to our attention. Please contact us as\ndescribed below so that we can investigate it further.", 
            "title": "What to do when you see abuse"
        }, 
        {
            "location": "/community/trademark/#where-to-get-further-information", 
            "text": "If you have any questions about this Policy, would like to speak with us about\nthe use of our Marks in ways not described in the Policy, or see any abuse of\nour Marks, please  contact Michael Stenta .", 
            "title": "Where to get further information"
        }, 
        {
            "location": "/community/trademark/#general-considerations-about-trademarks-and-their-use", 
            "text": "", 
            "title": "General considerations about trademarks and their use"
        }, 
        {
            "location": "/community/trademark/#what-trademark-law-is-about", 
            "text": "", 
            "title": "What trademark law is about"
        }, 
        {
            "location": "/community/trademark/#what-is-a-trademark", 
            "text": "A trademark is a word, phrase, symbol or design, or a combination of words,\nphrases, symbols or designs, that identifies and distinguishes the source of the\ngoods of one party from those of others. A service mark is the same as a\ntrademark, except that it identifies and distinguishes the source of a service\nrather than a product. \"Trade dress\" or \"get up\" refers to the look and feel of\nthe packaging, which in this context can include the layout, colors, images, and\ndesign choices in a web page. Throughout this Policy, the terms \"trademark\" and\n\"mark\" refer to both trademarks, service marks and trade dress.  However, the use of a word is \"not as a trademark\" when it is used functionally\nas part of the software program, for example, in a file, folder, directory, or\npath name. Use in this way is not a trademark infringement.", 
            "title": "What is a trademark?"
        }, 
        {
            "location": "/community/trademark/#what-is-likelihood-of-confusion", 
            "text": "There is trademark infringement if your use of a trademark has created a\n\"likelihood of confusion.\" This means using a trademark in a way that will\nlikely confuse or deceive the relevant consuming public about the source of a\nproduct or service using the mark in question. For example, if the \"Foo\"\nsoftware extension removes all double spaces after periods, but someone else\nlater creates \"Foo\" software that adds a third space after periods, consumers\nwould be confused between the two and the newcomer will likely be a trademark\ninfringer. As another example, if a company makes \"Foobar\" software and a third\nparty offers training called \"Foobar Certification,\" a person is likely to\nbelieve, wrongly, that the certification is being offered by the makers of\nFoobar software. The third party has likely misled consumers about the source of\nits training and is a trademark infringer.", 
            "title": "What is \"likelihood of confusion\"?"
        }, 
        {
            "location": "/community/trademark/#what-is-nominative-use", 
            "text": "So-called \"nominative use\" (or \"nominative fair use\"), which is the name of the\ndoctrine under U.S. trademark law, allows the use of another's trademark where\nit is necessary for understanding. Other countries' trademark laws also have\nsimilar provisions. For example, a car repair shop that specializes in a\nparticular brand of automobile, VW for example, must be allowed to say that they\nrepair VW cars. Here is what you should consider when deciding whether your use\nof a trademark is a nominative fair use:   Whether you can identify the product or service in question without using the\ntrademark;  Whether you are avoiding a likelihood of confusion in the way that you have\nused the trademark; and  Whether you have used only as much as is necessary to identify the product or\nservice.   With our \"Foobar Certification\" example above, the person offering the\ncertification would be allowed to say, under the nominative fair use doctrine,\nthat she is offering \"Maude's Certification for Foobar software.\"  It is almost never the case that using a Logo will be a nominative fair use\nsince it will be a rare case where the logo is needed for strictly informational\npurposes.", 
            "title": "What is \"nominative\" use?"
        }, 
        {
            "location": "/community/trademark/#proper-trademark-use", 
            "text": "These rules hold true for all trademarks, not just ours, so you should follow\nthem for our Marks as well as anyone else's.", 
            "title": "Proper trademark use"
        }, 
        {
            "location": "/community/trademark/#use-of-trademarks-in-text", 
            "text": "Always distinguish trademarks from surrounding text with at least initial\ncapital letters or in all capital letters.  Note that with the farmOS mark, an exception is made in that the first letter\ncan be lowercase, but \"OS\" must be capitalized.   Unacceptable: farmos  Acceptable: FarmOS, FARMOS, farmOS   Always use trademarks in their exact form with the correct spelling, neither\nabbreviated, hyphenated, or combined with any other word or words.   Unacceptable: Farm OS, farm-OS  Acceptable: farmOS   Don't pluralize a trademark.   Unacceptable: I have seventeen farmOSes running on my farm.  Acceptable: I have seventeen farmOS instances running on my farm.   Don't use \"a\" or \"the\" to refer to an instance of the trademark.   Unacceptable: I put a farmOS on my mom's computer.  Acceptable: I put a farmOS instance on my mom's computer.   Always use a trademark as an adjective modifying a noun. You can see the nouns\nwe prefer under \"Our trademarks.\"   Unacceptable: This is a farmOS. Anyone can install it.  Acceptable: This is a farmOS application. Anyone can install it.   Don't use a trademark as a verb. Trademarks are products or services, never\nactions.   Unacceptable: I farmOSed my computer today!  Acceptable: I installed farmOS on my computer today!   Don't use a trademark as a possessive. Instead, the following noun should be\nused in possessive form or the sentence reworded so there is no possessive.   Unacceptable: farmOS's interface is very clean.  Acceptable: The farmOS dashboard's interface is very clean.   Don't translate a trademark into another language.   Acceptable: Quiero instalar farmOS en mi sistema.  Unacceptable: Quiero instalar granjaOS en mi sistema.", 
            "title": "Use of trademarks in text"
        }, 
        {
            "location": "/community/trademark/#use-of-logos", 
            "text": "You may not change any Logo except to scale it. This means you may not add\ndecorative elements, change the colors, change the proportions, distort it, add\nelements, or combine it with other logos.  However, when the context requires the use of black-and-white graphics and the\nlogo is color, you may reproduce the logo in a manner that produces a\nblack-and-white image.   These guidelines are based on the Model Trademark Guidelines, available at  http://www.modeltrademarkguidelines.org , used under a Creative Commons\nAttribution 3.0 Unported license: https://creativecommons.org/licenses/by/3.0/deed.en_US", 
            "title": "Use of Logos"
        }, 
        {
            "location": "/faq/", 
            "text": "Frequently Asked Questions\n\n\nWhat is farmOS?\n\n\n\n\nWhat is the farmOS software used for?\n\n\n\n\nfarmOS is a web-based application for agricultural management, planning, and\nrecord keeping.\n\n\nWho is using farmOS?\n\n\n\n\nAre there a lot of farms using farmOS?\n\n\n\n\nA brief list of farms that are using farmOS is available here:\n\nFarms using farmOS\n. Anyone using farmOS can add their farm's name to this\nlist.\n\n\nYou can also refer to the \nDrupal.org Usage Statistics\n for farmOS, which shows\nhow many active farmOS installations are out there in the wild. Note that this\nonly includes installations that have their \"Update\" module enabled.\n\n\nHow do I use farmOS?\n\n\n\n\nHow do I start using farmOS?\n\n\n\n\nRefer to the \nGetting Started\n page in the User Guide.\n\n\n\n\nDoes farmOS cost money?\n\n\n\n\nThe farmOS software itself is free. Hosting the software on a web server so that\nyou can access it from anywhere requires paying for web hosting.\n\n\nLow-cost farmOS hosting is available through \nFarmier\n.\n\n\n\n\nCan I use farmOS on my laptop/desktop/phone/tablet?\n\n\n\n\nYes! farmOS is a web application, which means it runs on any device that has a\nweb browser.\n\n\nIt uses the \nBootstrap framework\n to ensure that it looks good on screen sizes\nbig and small.\n\n\n\n\nDo I need internet access to use farmOS?\n\n\n\n\nIn general: yes. farmOS uses Google Maps for its map base layers, which require\nan internet connection to access. And in most cases you will want to host your\nfarmOS installation on a web server so that it is accessible to everyone who\nneeds to use it.\n\n\nWith a little ingenuity, however, it should be possible to run farmOS locally,\nwith your own web server and locally hosted map tiles. You could be the first\nto try it! If you do, please share your experience so the rest of the farmOS\ncommunity can learn along with you!\n\n\n\n\nWho owns the data that I enter into farmOS?\n\n\n\n\nYou do. farmOS is not owned by any single group or individual, so neither is\nyour data. You also have full access to the code that is storing and using that\ndata! Why? Because farmOS is free open source software developed by a community\nof farmOS users.\n\n\nWhere can I find news?\n\n\n\n\nWhere are farmOS development updates posted?\n\n\n\n\nEach version of farmOS is released with a set of \nrelease notes\n that describe\nall of the changes included in the release, with links to detailed descriptions\nand community discussions.\n\n\nWhen farmOS is mentioned in the media, a link is added to the \nPress\n page.\n\n\nUpdates on farmOS development are also available on the Farmier \nBlog\n and\n\nTwitter\n account. \nFarmier\n is run by the lead developer of farmOS.\n\n\nWhy farmOS?\n\n\n\n\nWhy was the farmOS project started in the first place?\n\n\n\n\nEric S. Raymond\n's first main point in \nThe Cathedral and the Bazaar\n answers\nthis question well:\n\n\n\n\n\n\nEvery good work of software starts by scratching a developer's personal\nitch.\n\n\n\n\n\n\nfarmOS started as a hobby project for farm mapping, planning, and record\nkeeping. It served to fill a gap in the existing software, and provide a\ngeneralized platform that other developers could build upon.\n\n\nIt is now available for free as \nopen source software\n.\n\n\nWhy open source?\n\n\n\n\nWhy was farmOS released under an open source license?\n\n\n\n\nfarmOS is built from many other open source projects - so it is only natural for\nit to be licensed similarly. Anyone can view the code, contribute features, and\nfix bugs.There is a benefit to working together on software.\n\n\n\n\nWhat license is farmOS released under?\n\n\n\n\nAs an extension of the \nDrupal\n project, farmOS is licensed under the\n\nGNU General Public License (GPL) v2+\n.\n\n\n\n\nWho owns the copyright to farmOS?\n\n\n\n\nSimilar to Drupal, all farmOS contributors retain copyright on their code, but\nagree to release it under the same license as Drupal and farmOS. If you are\nunable or unwilling to contribute a patch under the GPL version 2 or later, do\nnot submit a patch.\n\n\n\n\nWho owns the farmOS trademark?\n\n\n\n\nfarmOS is a registered trademark of \nMichael Stenta\n. For more information on\nthe farmOS tradmark and acceptable usage, refer to the\n\nfarmOS Trademark Guidelines\n.\n\n\nWhy Drupal?\n\n\n\n\nWhy was farmOS built on Drupal?\n\n\n\n\nDrupal is one of the most widely used open source web application frameworks,\npowering some of the largest websites on the internet. It has a huge community\nof users and developers who continue to push it forward, completely independent\nof farmOS.\n\n\nDrupal's core functionality can be extended with add-on modules. This means that\nnew farmOS modules can be written to meet very specific requirements, and users\ncan choose which modules they need and which they don't. For example, if you\ngrow crops but you do not raise livestock, you can enable the Crop module, but\nleave the Livestock module turned off. Or if you are using a specific type of\nsensor to collect environmental data, you can turn on a module that is\nspecifically made for that sensor. New modules can be written by any developer\nwho understands Drupal.\n\n\nIt is also possible to build a lot of things directly in the Drupal user\ninterface, without writing any code. The \nViews\n and \nRules\n modules are two\ngreat examples of this. A lot of the modules that come with farmOS are built as\n\nFeatures\n, which is a module that automatically builds new modules! And we\ncan't forget the \nOpenlayers\n module, which is used to build all the maps.\n\n\nAside from flexibility, security is also a big priority in the Drupal\ncommunity. Drupal sites can have multiple user logins, each with an assigned\nrole and permissions. This allows very fine-grained access control. farmOS uses\nthis to provide its own set of \nroles and permissions\n.\n\n\nLast but not least: \ninternationalization and localization\n. Drupal is used\nworldwide, and it provides infrastructure to translate farmOS into any language.\nAnyone can contribute translations, and they can be shared with the rest of the\nfarmOS community. If you are interested in contributing a translation in your\nlanguage, open an issue in the \nissue queues\n and let's get started!\n\n\n\n\nWhy isn't this website (farmOS.org) built with Drupal?\n\n\n\n\nThe first iteration of the farmOS.org site \nwas\n built in Drupal, and was hosted\nby \nFarmier\n. Currently, farmOS.org is written in simple \nMarkdown\n, built with\n\nMkdocs\n, and hosted by \nGitHub\n. We decided to do this for a few reasons:\n\n\n1. Keep things simple.\n\n\nfarmOS.org is not a dynamic website. It serves as a portal into the farmOS\ncommunity and documentation. All project management, discussion, and issue\ntracking takes place on Drupal.org (which \nis\n powered by Drupal).\n\n\nWill that change in the future? Maybe! But this works great for now.\n\n\n2. Markdown is easy.\n\n\nMarkdown is basically plain-text, which makes it really easy to read and\nunderstand, even in its raw form. And because it is stored in simple text files,\nchanges can be easily tracked in source control (\nGit\n).\n\n\nIt also lowers the barrier to contributors who want to help write documentation.\nAnyone can suggest changes to the content of this site, simply by \nforking\n the\nfarmOS.org repository on GitHub, making changes to their fork, and then creating\na pull request to have them included in the original repository.\n\n\n3. Hosting on GitHub is free.\n\n\nGitHub provides free hosting of static websites through their \nGitHub Pages\n\nservice. Bonus!", 
            "title": "FAQ"
        }, 
        {
            "location": "/faq/#frequently-asked-questions", 
            "text": "", 
            "title": "Frequently Asked Questions"
        }, 
        {
            "location": "/faq/#what-is-farmos", 
            "text": "What is the farmOS software used for?   farmOS is a web-based application for agricultural management, planning, and\nrecord keeping.", 
            "title": "What is farmOS?"
        }, 
        {
            "location": "/faq/#who-is-using-farmos", 
            "text": "Are there a lot of farms using farmOS?   A brief list of farms that are using farmOS is available here: Farms using farmOS . Anyone using farmOS can add their farm's name to this\nlist.  You can also refer to the  Drupal.org Usage Statistics  for farmOS, which shows\nhow many active farmOS installations are out there in the wild. Note that this\nonly includes installations that have their \"Update\" module enabled.", 
            "title": "Who is using farmOS?"
        }, 
        {
            "location": "/faq/#how-do-i-use-farmos", 
            "text": "How do I start using farmOS?   Refer to the  Getting Started  page in the User Guide.   Does farmOS cost money?   The farmOS software itself is free. Hosting the software on a web server so that\nyou can access it from anywhere requires paying for web hosting.  Low-cost farmOS hosting is available through  Farmier .   Can I use farmOS on my laptop/desktop/phone/tablet?   Yes! farmOS is a web application, which means it runs on any device that has a\nweb browser.  It uses the  Bootstrap framework  to ensure that it looks good on screen sizes\nbig and small.   Do I need internet access to use farmOS?   In general: yes. farmOS uses Google Maps for its map base layers, which require\nan internet connection to access. And in most cases you will want to host your\nfarmOS installation on a web server so that it is accessible to everyone who\nneeds to use it.  With a little ingenuity, however, it should be possible to run farmOS locally,\nwith your own web server and locally hosted map tiles. You could be the first\nto try it! If you do, please share your experience so the rest of the farmOS\ncommunity can learn along with you!   Who owns the data that I enter into farmOS?   You do. farmOS is not owned by any single group or individual, so neither is\nyour data. You also have full access to the code that is storing and using that\ndata! Why? Because farmOS is free open source software developed by a community\nof farmOS users.", 
            "title": "How do I use farmOS?"
        }, 
        {
            "location": "/faq/#where-can-i-find-news", 
            "text": "Where are farmOS development updates posted?   Each version of farmOS is released with a set of  release notes  that describe\nall of the changes included in the release, with links to detailed descriptions\nand community discussions.  When farmOS is mentioned in the media, a link is added to the  Press  page.  Updates on farmOS development are also available on the Farmier  Blog  and Twitter  account.  Farmier  is run by the lead developer of farmOS.", 
            "title": "Where can I find news?"
        }, 
        {
            "location": "/faq/#why-farmos", 
            "text": "Why was the farmOS project started in the first place?   Eric S. Raymond 's first main point in  The Cathedral and the Bazaar  answers\nthis question well:    Every good work of software starts by scratching a developer's personal\nitch.    farmOS started as a hobby project for farm mapping, planning, and record\nkeeping. It served to fill a gap in the existing software, and provide a\ngeneralized platform that other developers could build upon.  It is now available for free as  open source software .", 
            "title": "Why farmOS?"
        }, 
        {
            "location": "/faq/#why-open-source", 
            "text": "Why was farmOS released under an open source license?   farmOS is built from many other open source projects - so it is only natural for\nit to be licensed similarly. Anyone can view the code, contribute features, and\nfix bugs.There is a benefit to working together on software.   What license is farmOS released under?   As an extension of the  Drupal  project, farmOS is licensed under the GNU General Public License (GPL) v2+ .   Who owns the copyright to farmOS?   Similar to Drupal, all farmOS contributors retain copyright on their code, but\nagree to release it under the same license as Drupal and farmOS. If you are\nunable or unwilling to contribute a patch under the GPL version 2 or later, do\nnot submit a patch.   Who owns the farmOS trademark?   farmOS is a registered trademark of  Michael Stenta . For more information on\nthe farmOS tradmark and acceptable usage, refer to the farmOS Trademark Guidelines .", 
            "title": "Why open source?"
        }, 
        {
            "location": "/faq/#why-drupal", 
            "text": "Why was farmOS built on Drupal?   Drupal is one of the most widely used open source web application frameworks,\npowering some of the largest websites on the internet. It has a huge community\nof users and developers who continue to push it forward, completely independent\nof farmOS.  Drupal's core functionality can be extended with add-on modules. This means that\nnew farmOS modules can be written to meet very specific requirements, and users\ncan choose which modules they need and which they don't. For example, if you\ngrow crops but you do not raise livestock, you can enable the Crop module, but\nleave the Livestock module turned off. Or if you are using a specific type of\nsensor to collect environmental data, you can turn on a module that is\nspecifically made for that sensor. New modules can be written by any developer\nwho understands Drupal.  It is also possible to build a lot of things directly in the Drupal user\ninterface, without writing any code. The  Views  and  Rules  modules are two\ngreat examples of this. A lot of the modules that come with farmOS are built as Features , which is a module that automatically builds new modules! And we\ncan't forget the  Openlayers  module, which is used to build all the maps.  Aside from flexibility, security is also a big priority in the Drupal\ncommunity. Drupal sites can have multiple user logins, each with an assigned\nrole and permissions. This allows very fine-grained access control. farmOS uses\nthis to provide its own set of  roles and permissions .  Last but not least:  internationalization and localization . Drupal is used\nworldwide, and it provides infrastructure to translate farmOS into any language.\nAnyone can contribute translations, and they can be shared with the rest of the\nfarmOS community. If you are interested in contributing a translation in your\nlanguage, open an issue in the  issue queues  and let's get started!   Why isn't this website (farmOS.org) built with Drupal?   The first iteration of the farmOS.org site  was  built in Drupal, and was hosted\nby  Farmier . Currently, farmOS.org is written in simple  Markdown , built with Mkdocs , and hosted by  GitHub . We decided to do this for a few reasons:  1. Keep things simple.  farmOS.org is not a dynamic website. It serves as a portal into the farmOS\ncommunity and documentation. All project management, discussion, and issue\ntracking takes place on Drupal.org (which  is  powered by Drupal).  Will that change in the future? Maybe! But this works great for now.  2. Markdown is easy.  Markdown is basically plain-text, which makes it really easy to read and\nunderstand, even in its raw form. And because it is stored in simple text files,\nchanges can be easily tracked in source control ( Git ).  It also lowers the barrier to contributors who want to help write documentation.\nAnyone can suggest changes to the content of this site, simply by  forking  the\nfarmOS.org repository on GitHub, making changes to their fork, and then creating\na pull request to have them included in the original repository.  3. Hosting on GitHub is free.  GitHub provides free hosting of static websites through their  GitHub Pages \nservice. Bonus!", 
            "title": "Why Drupal?"
        }
    ]
}